{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/pascal-maker/Python/blob/master/Session_04_SVM_CV_Assignment.PascalMusabyimanaipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cz8fUw-psoT9"
      },
      "source": [
        "# SVM & Cross-Validation\n",
        "\n",
        "In the realm of machine learning, Support Vector Machines (SVMs) stand out as a powerful tool for classification and regression tasks. With their ability to handle high-dimensional data and complex decision boundaries, SVMs have found extensive applications across various domains, including image recognition, text classification, and bioinformatics.\n",
        "\n",
        "Throughout this assignment, we aim to provide a comprehensive understanding of Support Vector Machines and their integration with cross-validation techniques, equipping you with the knowledge and skills necessary to apply these methods confidently in your own machine learning problems.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "mZIk3QaXsoT-"
      },
      "outputs": [],
      "source": [
        "%matplotlib inline\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import matplotlib.image as mpimg\n",
        "import seaborn as sns\n",
        "\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import accuracy_score\n",
        "from sklearn.metrics import f1_score\n",
        "from sklearn.metrics import balanced_accuracy_score\n",
        "from sklearn.metrics import classification_report\n",
        "from sklearn.metrics import confusion_matrix\n",
        "from sklearn import preprocessing\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.svm import SVC\n",
        "from sklearn.model_selection import GridSearchCV\n",
        "from sklearn.model_selection import RandomizedSearchCV\n",
        "\n",
        "\n",
        "from scipy.stats import randint\n",
        "from scipy.stats import uniform\n",
        "from skimage.io import imread, imshow\n",
        "\n",
        "pd.set_option('display.max_rows',1000)\n",
        "pd.set_option('display.max_columns',1000)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "TthgjendsoT_"
      },
      "source": [
        "## 1. Cancer detection\n",
        "\n",
        "\n",
        "Train a model to predict whether a specific tumor is benign or malignant. Use the dataset 'cancer.csv' for this purpose.\n",
        "\n",
        "Base your approach on methodologies from previous assignments to achieve the best possible results. Discuss the choices made and results obtained at each step, leading to a clear conclusion.\n",
        "\n",
        "Tip: A classifier can only be trained with numerical values. Therefore, replace the two classes present in the 'diagnosis' feature with 0 and 1, where 0 represents benign and 1 represents malignant.\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 400
        },
        "id": "4X-CkYU4soT_",
        "outputId": "d4e6fbdd-85eb-4c38-9b95-d4dbd5834ed5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         id diagnosis  radius_mean  texture_mean  perimeter_mean  area_mean  \\\n",
              "0    842517         M        20.57         17.77          132.90     1326.0   \n",
              "1  84300903         M        19.69         21.25          130.00     1203.0   \n",
              "2  84348301         M        11.42         20.38           77.58      386.1   \n",
              "3  84358402         M        20.29         14.34          135.10     1297.0   \n",
              "4    843786         M        12.45         15.70           82.57      477.1   \n",
              "5    844359         M        18.25         19.98          119.60     1040.0   \n",
              "6  84458202         M        13.71         20.83           90.20      577.9   \n",
              "7    844981         M        13.00         21.82           87.50      519.8   \n",
              "8  84501001         M        12.46         24.04           83.97      475.9   \n",
              "9    845636         M        16.02         23.24          102.70      797.8   \n",
              "\n",
              "   smoothness_mean  compactness_mean  concavity_mean  concave points_mean  \\\n",
              "0          0.08474           0.07864         0.08690              0.07017   \n",
              "1          0.10960           0.15990         0.19740              0.12790   \n",
              "2          0.14250           0.28390         0.24140              0.10520   \n",
              "3          0.10030           0.13280         0.19800              0.10430   \n",
              "4          0.12780           0.17000         0.15780              0.08089   \n",
              "5          0.09463           0.10900         0.11270              0.07400   \n",
              "6          0.11890           0.16450         0.09366              0.05985   \n",
              "7          0.12730           0.19320         0.18590              0.09353   \n",
              "8          0.11860           0.23960         0.22730              0.08543   \n",
              "9          0.08206           0.06669         0.03299              0.03323   \n",
              "\n",
              "   symmetry_mean  fractal_dimension_mean  radius_se  texture_se  perimeter_se  \\\n",
              "0         0.1812                 0.05667     0.5435      0.7339         3.398   \n",
              "1         0.2069                 0.05999     0.7456      0.7869         4.585   \n",
              "2         0.2597                 0.09744     0.4956      1.1560         3.445   \n",
              "3         0.1809                 0.05883     0.7572      0.7813         5.438   \n",
              "4         0.2087                 0.07613     0.3345      0.8902         2.217   \n",
              "5         0.1794                 0.05742     0.4467      0.7732         3.180   \n",
              "6         0.2196                 0.07451     0.5835      1.3770         3.856   \n",
              "7         0.2350                 0.07389     0.3063      1.0020         2.406   \n",
              "8         0.2030                 0.08243     0.2976      1.5990         2.039   \n",
              "9         0.1528                 0.05697     0.3795      1.1870         2.466   \n",
              "\n",
              "   area_se  smoothness_se  compactness_se  concavity_se  concave points_se  \\\n",
              "0    74.08       0.005225        0.013080       0.01860           0.013400   \n",
              "1    94.03       0.006150        0.040060       0.03832           0.020580   \n",
              "2    27.23       0.009110        0.074580       0.05661           0.018670   \n",
              "3    94.44       0.011490        0.024610       0.05688           0.018850   \n",
              "4    27.19       0.007510        0.033450       0.03672           0.011370   \n",
              "5    53.91       0.004314        0.013820       0.02254           0.010390   \n",
              "6    50.96       0.008805        0.030290       0.02488           0.014480   \n",
              "7    24.32       0.005731        0.035020       0.03553           0.012260   \n",
              "8    23.94       0.007149        0.072170       0.07743           0.014320   \n",
              "9    40.51       0.004029        0.009269       0.01101           0.007591   \n",
              "\n",
              "   symmetry_se  fractal_dimension_se  radius_worst  texture_worst  \\\n",
              "0      0.01389              0.003532         24.99          23.41   \n",
              "1      0.02250              0.004571         23.57          25.53   \n",
              "2      0.05963              0.009208         14.91          26.50   \n",
              "3      0.01756              0.005115         22.54          16.67   \n",
              "4      0.02165              0.005082         15.47          23.75   \n",
              "5      0.01369              0.002179         22.88          27.66   \n",
              "6      0.01486              0.005412         17.06          28.14   \n",
              "7      0.02143              0.003749         15.49          30.73   \n",
              "8      0.01789              0.010080         15.09          40.68   \n",
              "9      0.01460              0.003042         19.19          33.88   \n",
              "\n",
              "   perimeter_worst  area_worst  smoothness_worst  compactness_worst  \\\n",
              "0           158.80      1956.0            0.1238             0.1866   \n",
              "1           152.50      1709.0            0.1444             0.4245   \n",
              "2            98.87       567.7            0.2098             0.8663   \n",
              "3           152.20      1575.0            0.1374             0.2050   \n",
              "4           103.40       741.6            0.1791             0.5249   \n",
              "5           153.20      1606.0            0.1442             0.2576   \n",
              "6           110.60       897.0            0.1654             0.3682   \n",
              "7           106.20       739.3            0.1703             0.5401   \n",
              "8            97.65       711.4            0.1853             1.0580   \n",
              "9           123.80      1150.0            0.1181             0.1551   \n",
              "\n",
              "   concavity_worst  concave points_worst  symmetry_worst  \\\n",
              "0           0.2416               0.18600          0.2750   \n",
              "1           0.4504               0.24300          0.3613   \n",
              "2           0.6869               0.25750          0.6638   \n",
              "3           0.4000               0.16250          0.2364   \n",
              "4           0.5355               0.17410          0.3985   \n",
              "5           0.3784               0.19320          0.3063   \n",
              "6           0.2678               0.15560          0.3196   \n",
              "7           0.5390               0.20600          0.4378   \n",
              "8           1.1050               0.22100          0.4366   \n",
              "9           0.1459               0.09975          0.2948   \n",
              "\n",
              "   fractal_dimension_worst  \n",
              "0                  0.08902  \n",
              "1                  0.08758  \n",
              "2                  0.17300  \n",
              "3                  0.07678  \n",
              "4                  0.12440  \n",
              "5                  0.08368  \n",
              "6                  0.11510  \n",
              "7                  0.10720  \n",
              "8                  0.20750  \n",
              "9                  0.08452  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dec0dfcc-e760-4151-b97e-40be422db5cb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>diagnosis</th>\n",
              "      <th>radius_mean</th>\n",
              "      <th>texture_mean</th>\n",
              "      <th>perimeter_mean</th>\n",
              "      <th>area_mean</th>\n",
              "      <th>smoothness_mean</th>\n",
              "      <th>compactness_mean</th>\n",
              "      <th>concavity_mean</th>\n",
              "      <th>concave points_mean</th>\n",
              "      <th>symmetry_mean</th>\n",
              "      <th>fractal_dimension_mean</th>\n",
              "      <th>radius_se</th>\n",
              "      <th>texture_se</th>\n",
              "      <th>perimeter_se</th>\n",
              "      <th>area_se</th>\n",
              "      <th>smoothness_se</th>\n",
              "      <th>compactness_se</th>\n",
              "      <th>concavity_se</th>\n",
              "      <th>concave points_se</th>\n",
              "      <th>symmetry_se</th>\n",
              "      <th>fractal_dimension_se</th>\n",
              "      <th>radius_worst</th>\n",
              "      <th>texture_worst</th>\n",
              "      <th>perimeter_worst</th>\n",
              "      <th>area_worst</th>\n",
              "      <th>smoothness_worst</th>\n",
              "      <th>compactness_worst</th>\n",
              "      <th>concavity_worst</th>\n",
              "      <th>concave points_worst</th>\n",
              "      <th>symmetry_worst</th>\n",
              "      <th>fractal_dimension_worst</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>842517</td>\n",
              "      <td>M</td>\n",
              "      <td>20.57</td>\n",
              "      <td>17.77</td>\n",
              "      <td>132.90</td>\n",
              "      <td>1326.0</td>\n",
              "      <td>0.08474</td>\n",
              "      <td>0.07864</td>\n",
              "      <td>0.08690</td>\n",
              "      <td>0.07017</td>\n",
              "      <td>0.1812</td>\n",
              "      <td>0.05667</td>\n",
              "      <td>0.5435</td>\n",
              "      <td>0.7339</td>\n",
              "      <td>3.398</td>\n",
              "      <td>74.08</td>\n",
              "      <td>0.005225</td>\n",
              "      <td>0.013080</td>\n",
              "      <td>0.01860</td>\n",
              "      <td>0.013400</td>\n",
              "      <td>0.01389</td>\n",
              "      <td>0.003532</td>\n",
              "      <td>24.99</td>\n",
              "      <td>23.41</td>\n",
              "      <td>158.80</td>\n",
              "      <td>1956.0</td>\n",
              "      <td>0.1238</td>\n",
              "      <td>0.1866</td>\n",
              "      <td>0.2416</td>\n",
              "      <td>0.18600</td>\n",
              "      <td>0.2750</td>\n",
              "      <td>0.08902</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>84300903</td>\n",
              "      <td>M</td>\n",
              "      <td>19.69</td>\n",
              "      <td>21.25</td>\n",
              "      <td>130.00</td>\n",
              "      <td>1203.0</td>\n",
              "      <td>0.10960</td>\n",
              "      <td>0.15990</td>\n",
              "      <td>0.19740</td>\n",
              "      <td>0.12790</td>\n",
              "      <td>0.2069</td>\n",
              "      <td>0.05999</td>\n",
              "      <td>0.7456</td>\n",
              "      <td>0.7869</td>\n",
              "      <td>4.585</td>\n",
              "      <td>94.03</td>\n",
              "      <td>0.006150</td>\n",
              "      <td>0.040060</td>\n",
              "      <td>0.03832</td>\n",
              "      <td>0.020580</td>\n",
              "      <td>0.02250</td>\n",
              "      <td>0.004571</td>\n",
              "      <td>23.57</td>\n",
              "      <td>25.53</td>\n",
              "      <td>152.50</td>\n",
              "      <td>1709.0</td>\n",
              "      <td>0.1444</td>\n",
              "      <td>0.4245</td>\n",
              "      <td>0.4504</td>\n",
              "      <td>0.24300</td>\n",
              "      <td>0.3613</td>\n",
              "      <td>0.08758</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>84348301</td>\n",
              "      <td>M</td>\n",
              "      <td>11.42</td>\n",
              "      <td>20.38</td>\n",
              "      <td>77.58</td>\n",
              "      <td>386.1</td>\n",
              "      <td>0.14250</td>\n",
              "      <td>0.28390</td>\n",
              "      <td>0.24140</td>\n",
              "      <td>0.10520</td>\n",
              "      <td>0.2597</td>\n",
              "      <td>0.09744</td>\n",
              "      <td>0.4956</td>\n",
              "      <td>1.1560</td>\n",
              "      <td>3.445</td>\n",
              "      <td>27.23</td>\n",
              "      <td>0.009110</td>\n",
              "      <td>0.074580</td>\n",
              "      <td>0.05661</td>\n",
              "      <td>0.018670</td>\n",
              "      <td>0.05963</td>\n",
              "      <td>0.009208</td>\n",
              "      <td>14.91</td>\n",
              "      <td>26.50</td>\n",
              "      <td>98.87</td>\n",
              "      <td>567.7</td>\n",
              "      <td>0.2098</td>\n",
              "      <td>0.8663</td>\n",
              "      <td>0.6869</td>\n",
              "      <td>0.25750</td>\n",
              "      <td>0.6638</td>\n",
              "      <td>0.17300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>84358402</td>\n",
              "      <td>M</td>\n",
              "      <td>20.29</td>\n",
              "      <td>14.34</td>\n",
              "      <td>135.10</td>\n",
              "      <td>1297.0</td>\n",
              "      <td>0.10030</td>\n",
              "      <td>0.13280</td>\n",
              "      <td>0.19800</td>\n",
              "      <td>0.10430</td>\n",
              "      <td>0.1809</td>\n",
              "      <td>0.05883</td>\n",
              "      <td>0.7572</td>\n",
              "      <td>0.7813</td>\n",
              "      <td>5.438</td>\n",
              "      <td>94.44</td>\n",
              "      <td>0.011490</td>\n",
              "      <td>0.024610</td>\n",
              "      <td>0.05688</td>\n",
              "      <td>0.018850</td>\n",
              "      <td>0.01756</td>\n",
              "      <td>0.005115</td>\n",
              "      <td>22.54</td>\n",
              "      <td>16.67</td>\n",
              "      <td>152.20</td>\n",
              "      <td>1575.0</td>\n",
              "      <td>0.1374</td>\n",
              "      <td>0.2050</td>\n",
              "      <td>0.4000</td>\n",
              "      <td>0.16250</td>\n",
              "      <td>0.2364</td>\n",
              "      <td>0.07678</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>843786</td>\n",
              "      <td>M</td>\n",
              "      <td>12.45</td>\n",
              "      <td>15.70</td>\n",
              "      <td>82.57</td>\n",
              "      <td>477.1</td>\n",
              "      <td>0.12780</td>\n",
              "      <td>0.17000</td>\n",
              "      <td>0.15780</td>\n",
              "      <td>0.08089</td>\n",
              "      <td>0.2087</td>\n",
              "      <td>0.07613</td>\n",
              "      <td>0.3345</td>\n",
              "      <td>0.8902</td>\n",
              "      <td>2.217</td>\n",
              "      <td>27.19</td>\n",
              "      <td>0.007510</td>\n",
              "      <td>0.033450</td>\n",
              "      <td>0.03672</td>\n",
              "      <td>0.011370</td>\n",
              "      <td>0.02165</td>\n",
              "      <td>0.005082</td>\n",
              "      <td>15.47</td>\n",
              "      <td>23.75</td>\n",
              "      <td>103.40</td>\n",
              "      <td>741.6</td>\n",
              "      <td>0.1791</td>\n",
              "      <td>0.5249</td>\n",
              "      <td>0.5355</td>\n",
              "      <td>0.17410</td>\n",
              "      <td>0.3985</td>\n",
              "      <td>0.12440</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>844359</td>\n",
              "      <td>M</td>\n",
              "      <td>18.25</td>\n",
              "      <td>19.98</td>\n",
              "      <td>119.60</td>\n",
              "      <td>1040.0</td>\n",
              "      <td>0.09463</td>\n",
              "      <td>0.10900</td>\n",
              "      <td>0.11270</td>\n",
              "      <td>0.07400</td>\n",
              "      <td>0.1794</td>\n",
              "      <td>0.05742</td>\n",
              "      <td>0.4467</td>\n",
              "      <td>0.7732</td>\n",
              "      <td>3.180</td>\n",
              "      <td>53.91</td>\n",
              "      <td>0.004314</td>\n",
              "      <td>0.013820</td>\n",
              "      <td>0.02254</td>\n",
              "      <td>0.010390</td>\n",
              "      <td>0.01369</td>\n",
              "      <td>0.002179</td>\n",
              "      <td>22.88</td>\n",
              "      <td>27.66</td>\n",
              "      <td>153.20</td>\n",
              "      <td>1606.0</td>\n",
              "      <td>0.1442</td>\n",
              "      <td>0.2576</td>\n",
              "      <td>0.3784</td>\n",
              "      <td>0.19320</td>\n",
              "      <td>0.3063</td>\n",
              "      <td>0.08368</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>84458202</td>\n",
              "      <td>M</td>\n",
              "      <td>13.71</td>\n",
              "      <td>20.83</td>\n",
              "      <td>90.20</td>\n",
              "      <td>577.9</td>\n",
              "      <td>0.11890</td>\n",
              "      <td>0.16450</td>\n",
              "      <td>0.09366</td>\n",
              "      <td>0.05985</td>\n",
              "      <td>0.2196</td>\n",
              "      <td>0.07451</td>\n",
              "      <td>0.5835</td>\n",
              "      <td>1.3770</td>\n",
              "      <td>3.856</td>\n",
              "      <td>50.96</td>\n",
              "      <td>0.008805</td>\n",
              "      <td>0.030290</td>\n",
              "      <td>0.02488</td>\n",
              "      <td>0.014480</td>\n",
              "      <td>0.01486</td>\n",
              "      <td>0.005412</td>\n",
              "      <td>17.06</td>\n",
              "      <td>28.14</td>\n",
              "      <td>110.60</td>\n",
              "      <td>897.0</td>\n",
              "      <td>0.1654</td>\n",
              "      <td>0.3682</td>\n",
              "      <td>0.2678</td>\n",
              "      <td>0.15560</td>\n",
              "      <td>0.3196</td>\n",
              "      <td>0.11510</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>844981</td>\n",
              "      <td>M</td>\n",
              "      <td>13.00</td>\n",
              "      <td>21.82</td>\n",
              "      <td>87.50</td>\n",
              "      <td>519.8</td>\n",
              "      <td>0.12730</td>\n",
              "      <td>0.19320</td>\n",
              "      <td>0.18590</td>\n",
              "      <td>0.09353</td>\n",
              "      <td>0.2350</td>\n",
              "      <td>0.07389</td>\n",
              "      <td>0.3063</td>\n",
              "      <td>1.0020</td>\n",
              "      <td>2.406</td>\n",
              "      <td>24.32</td>\n",
              "      <td>0.005731</td>\n",
              "      <td>0.035020</td>\n",
              "      <td>0.03553</td>\n",
              "      <td>0.012260</td>\n",
              "      <td>0.02143</td>\n",
              "      <td>0.003749</td>\n",
              "      <td>15.49</td>\n",
              "      <td>30.73</td>\n",
              "      <td>106.20</td>\n",
              "      <td>739.3</td>\n",
              "      <td>0.1703</td>\n",
              "      <td>0.5401</td>\n",
              "      <td>0.5390</td>\n",
              "      <td>0.20600</td>\n",
              "      <td>0.4378</td>\n",
              "      <td>0.10720</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>84501001</td>\n",
              "      <td>M</td>\n",
              "      <td>12.46</td>\n",
              "      <td>24.04</td>\n",
              "      <td>83.97</td>\n",
              "      <td>475.9</td>\n",
              "      <td>0.11860</td>\n",
              "      <td>0.23960</td>\n",
              "      <td>0.22730</td>\n",
              "      <td>0.08543</td>\n",
              "      <td>0.2030</td>\n",
              "      <td>0.08243</td>\n",
              "      <td>0.2976</td>\n",
              "      <td>1.5990</td>\n",
              "      <td>2.039</td>\n",
              "      <td>23.94</td>\n",
              "      <td>0.007149</td>\n",
              "      <td>0.072170</td>\n",
              "      <td>0.07743</td>\n",
              "      <td>0.014320</td>\n",
              "      <td>0.01789</td>\n",
              "      <td>0.010080</td>\n",
              "      <td>15.09</td>\n",
              "      <td>40.68</td>\n",
              "      <td>97.65</td>\n",
              "      <td>711.4</td>\n",
              "      <td>0.1853</td>\n",
              "      <td>1.0580</td>\n",
              "      <td>1.1050</td>\n",
              "      <td>0.22100</td>\n",
              "      <td>0.4366</td>\n",
              "      <td>0.20750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>845636</td>\n",
              "      <td>M</td>\n",
              "      <td>16.02</td>\n",
              "      <td>23.24</td>\n",
              "      <td>102.70</td>\n",
              "      <td>797.8</td>\n",
              "      <td>0.08206</td>\n",
              "      <td>0.06669</td>\n",
              "      <td>0.03299</td>\n",
              "      <td>0.03323</td>\n",
              "      <td>0.1528</td>\n",
              "      <td>0.05697</td>\n",
              "      <td>0.3795</td>\n",
              "      <td>1.1870</td>\n",
              "      <td>2.466</td>\n",
              "      <td>40.51</td>\n",
              "      <td>0.004029</td>\n",
              "      <td>0.009269</td>\n",
              "      <td>0.01101</td>\n",
              "      <td>0.007591</td>\n",
              "      <td>0.01460</td>\n",
              "      <td>0.003042</td>\n",
              "      <td>19.19</td>\n",
              "      <td>33.88</td>\n",
              "      <td>123.80</td>\n",
              "      <td>1150.0</td>\n",
              "      <td>0.1181</td>\n",
              "      <td>0.1551</td>\n",
              "      <td>0.1459</td>\n",
              "      <td>0.09975</td>\n",
              "      <td>0.2948</td>\n",
              "      <td>0.08452</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dec0dfcc-e760-4151-b97e-40be422db5cb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-dec0dfcc-e760-4151-b97e-40be422db5cb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-dec0dfcc-e760-4151-b97e-40be422db5cb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c2757496-c0db-44d4-b108-880910a510ac\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c2757496-c0db-44d4-b108-880910a510ac')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c2757496-c0db-44d4-b108-880910a510ac button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "dataset"
            }
          },
          "metadata": {},
          "execution_count": 2
        }
      ],
      "source": [
        "# Reading the dataset\n",
        "\n",
        "dataset = pd.read_csv('cancer.csv')\n",
        "dataset.head(10)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8ZyCkNQBsoUA",
        "outputId": "7476c3d5-ac1a-4fc5-a2d6-00aef01ecef9"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "diagnosis\n",
            "B    357\n",
            "M    211\n",
            "Name: count, dtype: int64\n"
          ]
        }
      ],
      "source": [
        "# Check whether or not the dataset is imbalanced\n",
        "data = dataset.diagnosis.value_counts()\n",
        "print(data)\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "sns.countplot(x='diagnosis', data=dataset)\n",
        "plt.title('Class Distribution')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "ZDVVxxVwyGrM",
        "outputId": "e7ddb6da-dfef-477e-ffcb-469121788d5c"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "id": "QD9wzkVjsoUA"
      },
      "outputs": [],
      "source": [
        "\n",
        "# Drop the ID column\n",
        "dataset.drop(['id'], axis=1, inplace=True)\n",
        "\n",
        "# Replace B by 0 and M by 1 in the diagnosis column\n",
        "dataset['diagnosis'] = dataset['diagnosis'].map({'B': 0, 'M': 1})\n",
        "\n",
        "# Split into features and targets\n",
        "X = dataset.drop('diagnosis', axis=1)\n",
        "y = dataset['diagnosis']\n",
        "\n",
        "# Split into training set and test set. Make sure that 150 samples end up in the test set\n",
        "from sklearn.model_selection import train_test_split\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=150, random_state=0)\n",
        "\n",
        "# To avoid a conversion warning during scaling\n",
        "X_train = X_train.astype('float64')\n",
        "X_test = X_test.astype('float64')\n",
        "\n",
        "# Scaling\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "scaler = StandardScaler().fit(X_train)\n",
        "X_train = scaler.transform(X_train)\n",
        "X_test = scaler.transform(X_test)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "f--bLSc3soUA"
      },
      "source": [
        "Train a logistic regression model via cross-validation.\n",
        "\n",
        "Utilize grid search and random search to find the best hyperparameters: C value, class_weight, penalty (l1 or l2). More information: http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html.\n",
        "\n",
        "Vary the value of K in K-fold cross-validation. Discuss the results.\n",
        "Test the obtained models on the test set. Which search technique do you prefer and why?\n",
        "\n",
        "Does it make sense to expand the feature set with polynomial features? Test this. Polynomial Features: http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.PolynomialFeatures.html\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uwm3Er7ysoUA",
        "outputId": "0ca162a9-78ac-4276-bfc1-3ef9fddf233f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Fitting 5 folds for each of 24 candidates, totalling 120 fits\n",
            "Best GridSearchCV Accuracy (CV): 0.9712564543889846\n",
            "Best Parameters: {'C': 0.01, 'class_weight': 'balanced', 'penalty': 'l2', 'solver': 'liblinear'}\n",
            "Test Set Evaluation (Grid Search):\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.95      0.97      0.96        99\n",
            "           1       0.94      0.90      0.92        51\n",
            "\n",
            "    accuracy                           0.95       150\n",
            "   macro avg       0.94      0.94      0.94       150\n",
            "weighted avg       0.95      0.95      0.95       150\n",
            "\n",
            "Confusion Matrix:\n",
            " [[96  3]\n",
            " [ 5 46]]\n",
            "Accuracy: 94.66666666666667\n"
          ]
        }
      ],
      "source": [
        "# Cross-validation via grid search\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.model_selection import GridSearchCV\n",
        "from sklearn.metrics import classification_report, confusion_matrix, accuracy_score\n",
        "\n",
        "# Define the parameter grid\n",
        "param_grid = {\n",
        "    'C': [0.001, 0.01, 0.1, 1, 10, 100],\n",
        "    'penalty': ['l1', 'l2'],\n",
        "    'class_weight': [None, 'balanced'],\n",
        "    'solver': ['liblinear']  # only solver that supports both l1 and l2\n",
        "}\n",
        "\n",
        "# Try different K values (e.g., 3, 5, 10)\n",
        "grid_search = GridSearchCV(LogisticRegression(), param_grid, scoring='accuracy', cv=5, n_jobs=-1, verbose=1)\n",
        "grid_search.fit(X_train, y_train)\n",
        "\n",
        "# Best hyperparameters and score\n",
        "print(\"Best GridSearchCV Accuracy (CV):\", grid_search.best_score_)\n",
        "print(\"Best Parameters:\", grid_search.best_params_)\n",
        "\n",
        "# Evaluate on test set\n",
        "y_pred_grid = grid_search.predict(X_test)\n",
        "print(\"Test Set Evaluation (Grid Search):\")\n",
        "print(classification_report(y_test, y_pred_grid))\n",
        "print(\"Confusion Matrix:\\n\", confusion_matrix(y_test, y_pred_grid))\n",
        "print(\"Accuracy:\", accuracy_score(y_test, y_pred_grid) * 100)\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        " What’s Good:\n",
        "The model generalizes well (good accuracy and F1-score on unseen test data).\n",
        "\n",
        "Balanced class weights helped prevent the model from biasing toward the majority class.\n",
        "\n",
        "Very low number of false positives and false negatives.\n",
        "\n",
        " What to Watch Out For:\n",
        "5 false negatives: In a real-world medical setting, even a few missed malignancies are unacceptable.\n",
        "\n"
      ],
      "metadata": {
        "id": "ke5gXMRY7342"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jb7_QH1MsoUA",
        "outputId": "966e558e-f016-496e-a96e-04d298b6a9e9"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Fitting 5 folds for each of 50 candidates, totalling 250 fits\n",
            "Best RandomizedSearchCV Accuracy (CV): 0.9736660929432015\n",
            "Best Parameters: {'C': np.float64(0.03334792728637585), 'class_weight': None, 'penalty': 'l2', 'solver': 'liblinear'}\n",
            "Test Set Evaluation (Random Search):\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.94      0.99      0.97        99\n",
            "           1       0.98      0.88      0.93        51\n",
            "\n",
            "    accuracy                           0.95       150\n",
            "   macro avg       0.96      0.94      0.95       150\n",
            "weighted avg       0.95      0.95      0.95       150\n",
            "\n",
            "Confusion Matrix:\n",
            " [[98  1]\n",
            " [ 6 45]]\n",
            "Accuracy: 95.33333333333334\n"
          ]
        }
      ],
      "source": [
        "# Cross-validation via random search\n",
        "from sklearn.model_selection import RandomizedSearchCV\n",
        "from scipy.stats import loguniform\n",
        "\n",
        "# Random search with distributions\n",
        "param_dist = {\n",
        "    'C': loguniform(0.001, 100),\n",
        "    'penalty': ['l1', 'l2'],\n",
        "    'class_weight': [None, 'balanced'],\n",
        "    'solver': ['liblinear']\n",
        "}\n",
        "\n",
        "random_search = RandomizedSearchCV(LogisticRegression(), param_distributions=param_dist,\n",
        "                                   n_iter=50, scoring='accuracy', cv=5, n_jobs=-1, verbose=1,\n",
        "                                   random_state=42)\n",
        "random_search.fit(X_train, y_train)\n",
        "\n",
        "# Best hyperparameters and score\n",
        "print(\"Best RandomizedSearchCV Accuracy (CV):\", random_search.best_score_)\n",
        "print(\"Best Parameters:\", random_search.best_params_)\n",
        "\n",
        "# Evaluate on test set\n",
        "y_pred_random = random_search.predict(X_test)\n",
        "print(\"Test Set Evaluation (Random Search):\")\n",
        "print(classification_report(y_test, y_pred_random))\n",
        "print(\"Confusion Matrix:\\n\", confusion_matrix(y_test, y_pred_random))\n",
        "print(\"Accuracy:\", accuracy_score(y_test, y_pred_random) * 100)\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        " What RandomizedSearch Did Well:\n",
        "Found a slightly more accurate model overall\n",
        "\n",
        "Great precision for malignant cases\n",
        "\n",
        "Fewer false positives → fewer patients unnecessarily worried\n",
        "\n",
        " What to Consider:\n",
        "It increased false negatives (missed 6 malignant cases vs 5 before)"
      ],
      "metadata": {
        "id": "4XzZ8Cwy9LKP"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jo6sNJbMsoUA"
      },
      "source": [
        "Re-train the grid search again but select the model that yields the highest balanced accuracy.\n",
        "https://scikit-learn.org/stable/modules/generated/sklearn.metrics.balanced_accuracy_score.html#sklearn.metrics.balanced_accuracy_score\n",
        "Also check http://mvpa.blogspot.com/2015/12/balanced-accuracy-what-and-why.html\n",
        "\n",
        "Discuss the result and compare it with the best accuracy score achieved earlier."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WTiBvqKmsoUA",
        "outputId": "2d1d5da7-7929-429d-f1b0-bd6a5960fa51"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Fitting 5 folds for each of 24 candidates, totalling 120 fits\n",
            "Best Balanced Accuracy (CV): 0.9695984162895929\n",
            "Best Parameters: {'C': 0.01, 'class_weight': 'balanced', 'penalty': 'l2', 'solver': 'liblinear'}\n",
            "Balanced Accuracy (Test): 0.9358288770053476\n",
            "Accuracy (Test): 0.9466666666666667\n"
          ]
        }
      ],
      "source": [
        "# Cross-validation\n",
        "from sklearn.model_selection import GridSearchCV\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.metrics import balanced_accuracy_score, make_scorer\n",
        "\n",
        "# Define parameter grid\n",
        "param_grid = {\n",
        "    'C': [0.001, 0.01, 0.1, 1, 10, 100],\n",
        "    'penalty': ['l1', 'l2'],\n",
        "    'class_weight': [None, 'balanced'],\n",
        "    'solver': ['liblinear']\n",
        "}\n",
        "\n",
        "# Use balanced accuracy as the scoring metric\n",
        "balanced_scorer = make_scorer(balanced_accuracy_score)\n",
        "\n",
        "grid_search_balanced = GridSearchCV(LogisticRegression(), param_grid,\n",
        "                                    scoring=balanced_scorer, cv=5,\n",
        "                                    n_jobs=-1, verbose=1)\n",
        "\n",
        "grid_search_balanced.fit(X_train, y_train)\n",
        "\n",
        "print(\"Best Balanced Accuracy (CV):\", grid_search_balanced.best_score_)\n",
        "print(\"Best Parameters:\", grid_search_balanced.best_params_)\n",
        "\n",
        "# Test on test set\n",
        "y_pred_bal = grid_search_balanced.predict(X_test)\n",
        "print(\"Balanced Accuracy (Test):\", balanced_accuracy_score(y_test, y_pred_bal))\n",
        "print(\"Accuracy (Test):\", accuracy_score(y_test, y_pred_bal))\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The results show that this logistic regression model is highly effective for the classification task at hand. With a balanced accuracy of approximately 0.936 and a standard accuracy of 0.947 on the test set, it demonstrates strong predictive power and good generalization to new data. The grid search with 5-fold cross-validation successfully identified a parameter set that balances model complexity and performance, making this model reliable and well-suited for the dataset, particularly if class imbalance is a factor. Overall, these are positive results, indicating a robust and practical solution."
      ],
      "metadata": {
        "id": "xErWuaZp-vkz"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LSWFtBvysoUA"
      },
      "source": [
        "Search for the model that yields the highest F1-score. To do this, you should utilize the F1 micro score.\n",
        "https://scikit-learn.org/stable/modules/generated/sklearn.metrics.f1_score.html#sklearn.metrics.f1_score"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WM1HVHOJsoUA",
        "outputId": "a36e0046-a314-4fa7-9821-9027c6004c04"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Fitting 5 folds for each of 24 candidates, totalling 120 fits\n",
            "Best F1 Micro Score (CV): 0.9712564543889846\n",
            "Best Parameters: {'C': 0.01, 'class_weight': 'balanced', 'penalty': 'l2', 'solver': 'liblinear'}\n",
            "F1 Micro (Test): 0.9466666666666667\n",
            "Classification Report:\n",
            "               precision    recall  f1-score   support\n",
            "\n",
            "           0       0.95      0.97      0.96        99\n",
            "           1       0.94      0.90      0.92        51\n",
            "\n",
            "    accuracy                           0.95       150\n",
            "   macro avg       0.94      0.94      0.94       150\n",
            "weighted avg       0.95      0.95      0.95       150\n",
            "\n"
          ]
        }
      ],
      "source": [
        "# Cross-validation\n",
        "from sklearn.metrics import f1_score\n",
        "\n",
        "# Define scorer for F1 micro\n",
        "f1_micro_scorer = make_scorer(f1_score, average='micro')\n",
        "\n",
        "grid_search_f1 = GridSearchCV(LogisticRegression(), param_grid,\n",
        "                              scoring=f1_micro_scorer, cv=5,\n",
        "                              n_jobs=-1, verbose=1)\n",
        "\n",
        "grid_search_f1.fit(X_train, y_train)\n",
        "\n",
        "print(\"Best F1 Micro Score (CV):\", grid_search_f1.best_score_)\n",
        "print(\"Best Parameters:\", grid_search_f1.best_params_)\n",
        "\n",
        "# Evaluate on test set\n",
        "y_pred_f1 = grid_search_f1.predict(X_test)\n",
        "print(\"F1 Micro (Test):\", f1_score(y_test, y_pred_f1, average='micro'))\n",
        "print(\"Classification Report:\\n\", classification_report(y_test, y_pred_f1))\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        " Strengths:\n",
        "Strong overall F1-micro and accuracy\n",
        "\n",
        "High precision for both classes\n",
        "\n",
        "Balanced model thanks to class_weight='balanced'\n",
        "\n",
        "Still not perfect:\n",
        "Recall for malignant (90%) means you're missing 1 in 10 actual cancer cases, which could be serious in a medical context\n",
        "\n"
      ],
      "metadata": {
        "id": "YEcitGq-AUob"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VR5mJG2rsoUA"
      },
      "source": [
        "Since the dataset is slightly imbalanced, most trained models tend to have a 'preference' for the majority class. Investigate whether you can increase the F1-score (or recall) by applying the following techniques:\n",
        "\n",
        "Passing the parameter class_weight='balanced' to the models.\n",
        "Performing oversampling using SMOTE. More information: https://imbalanced-learn.org/stable/references/generated/imblearn.over_sampling.SMOTE.html. You may need to install the imbalanced-learn library using pip3 install imbalanced-learn or in Anaconda: **conda install conda-forge::imbalanced-learn**\n",
        "\n",
        "\n",
        "Discuss the results you have achieved, paying particular attention to the F1 micro score."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Aa5jaQswsoUB",
        "outputId": "8cee73d3-365c-49a2-e16f-32a7a4daf31d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "F1 Micro with class_weight='balanced': 0.98\n"
          ]
        }
      ],
      "source": [
        "# Balancing\n",
        "\n",
        "model = LogisticRegression(C=1, solver='liblinear', class_weight='balanced')\n",
        "model.fit(X_train, y_train)\n",
        "\n",
        "y_pred_balanced = model.predict(X_test)\n",
        "print(\"F1 Micro with class_weight='balanced':\", f1_score(y_test, y_pred_balanced, average='micro'))\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EXKJOq2csoUB",
        "outputId": "894ea7dd-50ea-4206-8c8e-bd32a3025617"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "F1 Micro after SMOTE: 0.98\n",
            "Classification Report:\n",
            "               precision    recall  f1-score   support\n",
            "\n",
            "           0       0.98      0.99      0.98        99\n",
            "           1       0.98      0.96      0.97        51\n",
            "\n",
            "    accuracy                           0.98       150\n",
            "   macro avg       0.98      0.98      0.98       150\n",
            "weighted avg       0.98      0.98      0.98       150\n",
            "\n"
          ]
        }
      ],
      "source": [
        "# Oversampling with SMOTE\n",
        "\n",
        "from imblearn.over_sampling import SMOTE\n",
        "\n",
        "sm = SMOTE(random_state=42)\n",
        "X_resampled, y_resampled = sm.fit_resample(X_train, y_train)\n",
        "\n",
        "# Retrain model on balanced data\n",
        "model_smote = LogisticRegression(C=1, solver='liblinear')\n",
        "model_smote.fit(X_resampled, y_resampled)\n",
        "\n",
        "y_pred_smote = model_smote.predict(X_test)\n",
        "print(\"F1 Micro after SMOTE:\", f1_score(y_test, y_pred_smote, average='micro'))\n",
        "print(\"Classification Report:\\n\", classification_report(y_test, y_pred_smote))\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xA1C3lCQsoUB"
      },
      "source": [
        "Suppose there is a demand to reduce the number of false negatives to 0. A false negative means that the diagnosis is benign while the tumor is actually malignant.\n",
        "\n",
        "\n",
        "Your options are to apply classweight balancing or threshold moving.\n",
        "\n",
        "\n",
        "Threshold moving, in the context of binary classification models like logistic regression or support vector machines, refers to adjusting the threshold value used to make predictions.\n",
        "\n",
        "By default, these models classify instances into one of two classes based on whether the predicted probability (output of the model) exceeds a certain threshold. For instance, if the threshold is set to 0.5, any instance with a predicted probability greater than 0.5 is classified as positive, while instances with predicted probabilities less than or equal to 0.5 are classified as negative.\n",
        "\n",
        "Threshold moving involves changing this threshold value to optimize specific metrics like accuracy, precision, recall, or F1-score. For example, if reducing false negatives is critical (e.g., in medical diagnosis where missing a positive case could be harmful), one might lower the threshold to ensure more instances are classified as positive, thus potentially reducing false negatives.\n",
        "\n",
        "\n",
        "\n",
        "Which threshold should be set to ensure that the model predicts no false negatives on the test set while still maintaining the highest possible accuracy? Plot the number of false negatives as a function of the threshold. Discuss the results."
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "1 Micro\t0.98\tBest overall\n",
        "Recall (malignant)\t\tMuch better than earlier (was 0.88–0.90)\n",
        "Precision (malignant)\t 0.98\tVery few false positives\n",
        "Accuracy\t 98%\tHighest yet\n",
        "False Negatives\t 2\tReduced from 5–6\n",
        "False Positives\t1\tLow and acceptable"
      ],
      "metadata": {
        "id": "30eTGe-zBEah"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 541
        },
        "id": "K9umxzY-soUB",
        "outputId": "5930b247-a3bb-4c24-ca8f-1d43d1aee9e4"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "✅ Threshold = 0.000 yields 0 false negatives\n",
            "Accuracy at this threshold = 34.00%\n"
          ]
        }
      ],
      "source": [
        "# Reducing the number of false negatives\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.metrics import confusion_matrix, accuracy_score\n",
        "\n",
        "# Get predicted probabilities for class 1 (malignant)\n",
        "y_proba = model_smote.predict_proba(X_test)[:, 1]\n",
        "\n",
        "thresholds = np.linspace(0, 1, 100)\n",
        "false_negatives = []\n",
        "accuracies = []\n",
        "\n",
        "for thresh in thresholds:\n",
        "    y_pred_thresh = (y_proba >= thresh).astype(int)\n",
        "    cm = confusion_matrix(y_test, y_pred_thresh)\n",
        "\n",
        "    # False negatives = actual 1 but predicted 0\n",
        "    FN = cm[1][0]\n",
        "    false_negatives.append(FN)\n",
        "\n",
        "    # Accuracy\n",
        "    acc = accuracy_score(y_test, y_pred_thresh)\n",
        "    accuracies.append(acc)\n",
        "\n",
        "# Plot FN vs Threshold\n",
        "plt.figure(figsize=(10, 5))\n",
        "plt.plot(thresholds, false_negatives, label='False Negatives', color='red')\n",
        "plt.xlabel('Threshold')\n",
        "plt.ylabel('Number of False Negatives')\n",
        "plt.title('False Negatives vs. Threshold')\n",
        "plt.grid(True)\n",
        "plt.legend()\n",
        "plt.show()\n",
        "\n",
        "# Find minimum threshold with 0 false negatives\n",
        "for t, fn, acc in zip(thresholds, false_negatives, accuracies):\n",
        "    if fn == 0:\n",
        "        print(f\"\\n✅ Threshold = {t:.3f} yields 0 false negatives\")\n",
        "        print(f\"Accuracy at this threshold = {acc * 100:.2f}%\")\n",
        "        break\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Metric\tValue\tMeaning\n",
        "Threshold\t0.000\tClassify everything as malignant\n",
        "False Negatives\t 0\tCaught 100% of cancers\n",
        "Accuracy\t 34%\tHuge drop due to misclassifying all benign cases\n",
        "Usefulness?\tOnly in extreme safety-critical systems (like screening step)"
      ],
      "metadata": {
        "id": "O518IlvuCXUt"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ip3q0NHfsoUB"
      },
      "source": [
        "## 2 - MNIST\n",
        "\n",
        "The MNIST (\"Modified National Institute of Standards and Technology\") dataset is commonly used for testing and benchmarking classification algorithms. It contains tens of thousands of images of handwritten digits. More information about this dataset can be found at: [MNIST Dataset](http://yann.lecun.com/exdb/mnist/)\n",
        "\n",
        "For this task, three data files are provided:\n",
        "\n",
        "1. 'train.csv' contains labeled data for training the classifier.\n",
        "2. 'test.csv' contains labeled data for testing the trained classifier.\n",
        "3. 'test_Kaggle.csv' contains unlabeled data for evaluating the classifier through the competition found at [Kaggle Digit Recognizer](https://www.kaggle.com/c/digit-recognizer). This data is only useful for participating in the Kaggle competition.\n",
        "\n",
        "1) Train both a logistic regression classifier and a Support Vector Machine (with or without kernel). Tune the hyperparameters to find the most performant classifier by maximizing accuracy or minimizing the error rate on the 'test.csv' dataset. The error rate = 1 - accuracy. Training Support Vector Machines (especially those with kernel) requires significant computational resources. Therefore, it is advisable to initially train on a small portion of the training set. Training via logistic regression is less demanding on the CPU; nonetheless, it is recommended to use the lbfgs solver (LogisticRegression(multi_class='multinomial', solver='lbfgs')).\n",
        "\n",
        "2) Provide comments in the code and write down your conclusions and decisions.\n",
        "\n",
        "3) Is normalization necessary here? Which normalization method would you use? Is StandardScaler a good choice?\n",
        "\n",
        "4) Investigate the two different types of multiclass classification: one-vs-one (ovo) or one-vs-rest (ovr). Focus on accuracy and computation time. What are the conclusions?\n",
        "\n",
        "5) Test your final classifier with some self-written digits. What are the findings? What does classification accuracy depend on?\n",
        "\n",
        "6) Optional: Test on the 'test_Kaggle' dataset and upload the results in the correct format to the Kaggle website. What score did you achieve? Compare this score with the score on [MNIST](http://yann.lecun.com/exdb/mnist/).\n",
        "\n",
        "You can visualize a digit using 'plt.imshow(X_train[n].reshape((28, 28)),cmap = 'gray')'."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "id": "P7H1XSeksoUB",
        "outputId": "fc952ed3-94ed-4536-c510-9104f2d857fc"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   label  pixel0  pixel1  pixel2  pixel3  pixel4  pixel5  pixel6  pixel7  \\\n",
              "0      1       0       0       0       0       0       0       0       0   \n",
              "1      0       0       0       0       0       0       0       0       0   \n",
              "2      1       0       0       0       0       0       0       0       0   \n",
              "3      4       0       0       0       0       0       0       0       0   \n",
              "4      0       0       0       0       0       0       0       0       0   \n",
              "\n",
              "   pixel8  pixel9  pixel10  pixel11  pixel12  pixel13  pixel14  pixel15  \\\n",
              "0       0       0        0        0        0        0        0        0   \n",
              "1       0       0        0        0        0        0        0        0   \n",
              "2       0       0        0        0        0        0        0        0   \n",
              "3       0       0        0        0        0        0        0        0   \n",
              "4       0       0        0        0        0        0        0        0   \n",
              "\n",
              "   pixel16  pixel17  pixel18  pixel19  pixel20  pixel21  pixel22  pixel23  \\\n",
              "0        0        0        0        0        0        0        0        0   \n",
              "1        0        0        0        0        0        0        0        0   \n",
              "2        0        0        0        0        0        0        0        0   \n",
              "3        0        0        0        0        0        0        0        0   \n",
              "4        0        0        0        0        0        0        0        0   \n",
              "\n",
              "   pixel24  pixel25  pixel26  pixel27  pixel28  pixel29  pixel30  pixel31  \\\n",
              "0        0        0        0        0        0        0        0        0   \n",
              "1        0        0        0        0        0        0        0        0   \n",
              "2        0        0        0        0        0        0        0        0   \n",
              "3        0        0        0        0        0        0        0        0   \n",
              "4        0        0        0        0        0        0        0        0   \n",
              "\n",
              "   pixel32  pixel33  pixel34  pixel35  pixel36  pixel37  pixel38  pixel39  \\\n",
              "0        0        0        0        0        0        0        0        0   \n",
              "1        0        0        0        0        0        0        0        0   \n",
              "2        0        0        0        0        0        0        0        0   \n",
              "3        0        0        0        0        0        0        0        0   \n",
              "4        0        0        0        0        0        0        0        0   \n",
              "\n",
              "   pixel40  pixel41  pixel42  pixel43  pixel44  pixel45  pixel46  pixel47  \\\n",
              "0        0        0        0        0        0        0        0        0   \n",
              "1        0        0        0        0        0        0        0        0   \n",
              "2        0        0        0        0        0        0        0        0   \n",
              "3        0        0        0        0        0        0        0        0   \n",
              "4        0        0        0        0        0        0        0        0   \n",
              "\n",
              "   pixel48  pixel49  pixel50  pixel51  pixel52  pixel53  pixel54  pixel55  \\\n",
              "0        0        0        0        0        0        0        0        0   \n",
              "1        0        0        0        0        0        0        0        0   \n",
              "2        0        0        0        0        0        0        0        0   \n",
              "3        0        0        0        0        0        0        0        0   \n",
              "4        0        0        0        0        0        0        0        0   \n",
              "\n",
              "   pixel56  pixel57  pixel58  pixel59  pixel60  pixel61  pixel62  pixel63  \\\n",
              "0        0        0        0        0        0        0        0        0   \n",
              "1        0        0        0        0        0        0        0        0   \n",
              "2        0        0        0        0        0        0        0        0   \n",
              "3        0        0        0        0        0        0        0        0   \n",
              "4        0        0        0        0        0        0        0        0   \n",
              "\n",
              "   pixel64  pixel65  pixel66  pixel67  pixel68  pixel69  pixel70  pixel71  \\\n",
              "0        0        0        0        0        0        0        0        0   \n",
              "1        0        0        0        0        0        0        0        0   \n",
              "2        0        0        0        0        0        0        0        0   \n",
              "3        0        0        0        0        0        0        0        0   \n",
              "4        0        0        0        0        0        0        0        0   \n",
              "\n",
              "   pixel72  pixel73  pixel74  pixel75  pixel76  pixel77  pixel78  pixel79  \\\n",
              "0        0        0        0        0        0        0        0        0   \n",
              "1        0        0        0        0        0        0        0        0   \n",
              "2        0        0        0        0        0        0        0        0   \n",
              "3        0        0        0        0        0        0        0        0   \n",
              "4        0        0        0        0        0        0        0        0   \n",
              "\n",
              "   pixel80  pixel81  pixel82  pixel83  pixel84  pixel85  pixel86  pixel87  \\\n",
              "0        0        0        0        0        0        0        0        0   \n",
              "1        0        0        0        0        0        0        0        0   \n",
              "2        0        0        0        0        0        0        0        0   \n",
              "3        0        0        0        0        0        0        0        0   \n",
              "4        0        0        0        0        0        0        0        0   \n",
              "\n",
              "   pixel88  pixel89  pixel90  pixel91  pixel92  pixel93  pixel94  pixel95  \\\n",
              "0        0        0        0        0        0        0        0        0   \n",
              "1        0        0        0        0        0        0        0        0   \n",
              "2        0        0        0        0        0        0        0        0   \n",
              "3        0        0        0        0        0        0        0        0   \n",
              "4        0        0        0        0        0        0        0        0   \n",
              "\n",
              "   pixel96  pixel97  pixel98  pixel99  pixel100  pixel101  pixel102  pixel103  \\\n",
              "0        0        0        0        0         0         0         0         0   \n",
              "1        0        0        0        0         0         0         0         0   \n",
              "2        0        0        0        0         0         0         0         0   \n",
              "3        0        0        0        0         0         0         0         0   \n",
              "4        0        0        0        0         0         0         0         0   \n",
              "\n",
              "   pixel104  pixel105  pixel106  pixel107  pixel108  pixel109  pixel110  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel111  pixel112  pixel113  pixel114  pixel115  pixel116  pixel117  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel118  pixel119  pixel120  pixel121  pixel122  pixel123  pixel124  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0        18        30       137   \n",
              "2         0         0         0         0         0         0         3   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         1        25       130       155   \n",
              "\n",
              "   pixel125  pixel126  pixel127  pixel128  pixel129  pixel130  pixel131  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1       137       192        86        72         1         0         0   \n",
              "2       141       139         3         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4       254       254       254       157        30         2         0   \n",
              "\n",
              "   pixel132  pixel133  pixel134  pixel135  pixel136  pixel137  pixel138  \\\n",
              "0       188       255        94         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel139  pixel140  pixel141  pixel142  pixel143  pixel144  pixel145  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel146  pixel147  pixel148  pixel149  pixel150  pixel151  pixel152  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0        13        86       250       254       254   \n",
              "2         0         0         0         0         0         0         9   \n",
              "3       220       179         6         0         0         0         0   \n",
              "4         0         0         8       103       253       253       253   \n",
              "\n",
              "   pixel153  pixel154  pixel155  pixel156  pixel157  pixel158  pixel159  \\\n",
              "0         0         0         0         0         0         0       191   \n",
              "1       254       254       217       246       151        32         0   \n",
              "2       254       254         8         0         0         0         0   \n",
              "3         0         0         0         0         9        77         0   \n",
              "4       253       253       253       253       253       114         2   \n",
              "\n",
              "   pixel160  pixel161  pixel162  pixel163  pixel164  pixel165  pixel166  \\\n",
              "0       250       253        93         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel167  pixel168  pixel169  pixel170  pixel171  pixel172  pixel173  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel174  pixel175  pixel176  pixel177  pixel178  pixel179  pixel180  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0        16       179       254       254       254       254   \n",
              "2         0         0         0         0         0         0         9   \n",
              "3        28       247        17         0         0         0         0   \n",
              "4         0        11       208       253       253       253       253   \n",
              "\n",
              "   pixel181  pixel182  pixel183  pixel184  pixel185  pixel186  pixel187  \\\n",
              "0         0         0         0         0         0       123       248   \n",
              "1       254       254       254       254       254       231        54   \n",
              "2       254       254         8         0         0         0         0   \n",
              "3         0         0         0         0        27       202         0   \n",
              "4       253       253       253       253       253       253       107   \n",
              "\n",
              "   pixel188  pixel189  pixel190  pixel191  pixel192  pixel193  pixel194  \\\n",
              "0       253       167        10         0         0         0         0   \n",
              "1        15         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel195  pixel196  pixel197  pixel198  pixel199  pixel200  pixel201  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel202  pixel203  pixel204  pixel205  pixel206  pixel207  pixel208  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0        72       254       254       254       254       254   \n",
              "2         0         0         0         0         0         0         9   \n",
              "3         0       242       155         0         0         0         0   \n",
              "4         0        31       253       253       253       253       253   \n",
              "\n",
              "   pixel209  pixel210  pixel211  pixel212  pixel213  pixel214  pixel215  \\\n",
              "0         0         0         0         0        80       247       253   \n",
              "1       254       254       254       254       254       254       254   \n",
              "2       254       254       106         0         0         0         0   \n",
              "3         0         0         0         0        27       254        63   \n",
              "4       253       253       253       253       253       253       215   \n",
              "\n",
              "   pixel216  pixel217  pixel218  pixel219  pixel220  pixel221  pixel222  \\\n",
              "0       208        13         0         0         0         0         0   \n",
              "1       104         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4       101         3         0         0         0         0         0   \n",
              "\n",
              "   pixel223  pixel224  pixel225  pixel226  pixel227  pixel228  pixel229  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel230  pixel231  pixel232  pixel233  pixel234  pixel235  pixel236  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1        61       191       254       254       254       254       254   \n",
              "2         0         0         0         0         0         0         9   \n",
              "3         0       160       207         6         0         0         0   \n",
              "4        23       210       253       253       253       248       161   \n",
              "\n",
              "   pixel237  pixel238  pixel239  pixel240  pixel241  pixel242  pixel243  \\\n",
              "0         0         0         0        29       207       253       235   \n",
              "1       109        83       199       254       254       254       254   \n",
              "2       254       254       184         0         0         0         0   \n",
              "3         0         0         0         0        27       254        65   \n",
              "4       222       222       246       253       253       253       253   \n",
              "\n",
              "   pixel244  pixel245  pixel246  pixel247  pixel248  pixel249  pixel250  \\\n",
              "0        77         0         0         0         0         0         0   \n",
              "1       243        85         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4       253        39         0         0         0         0         0   \n",
              "\n",
              "   pixel251  pixel252  pixel253  pixel254  pixel255  pixel256  pixel257  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel258  pixel259  pixel260  pixel261  pixel262  pixel263  pixel264  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1       172       254       254       254       202       147       147   \n",
              "2         0         0         0         0         0         0         9   \n",
              "3         0       127       254        21         0         0         0   \n",
              "4       136       253       253       253       229        77         0   \n",
              "\n",
              "   pixel265  pixel266  pixel267  pixel268  pixel269  pixel270  pixel271  \\\n",
              "0         0         0        54       209       253       253        88   \n",
              "1        45         0        11        29       200       254       254   \n",
              "2       254       254       184         0         0         0         0   \n",
              "3         0         0         0         0        20       239        65   \n",
              "4         0         0        70       218       253       253       253   \n",
              "\n",
              "   pixel272  pixel273  pixel274  pixel275  pixel276  pixel277  pixel278  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1       254       171         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4       253       215        91         0         0         0         0   \n",
              "\n",
              "   pixel279  pixel280  pixel281  pixel282  pixel283  pixel284  pixel285  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         1   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         5   \n",
              "\n",
              "   pixel286  pixel287  pixel288  pixel289  pixel290  pixel291  pixel292  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1       174       254       254        89        67         0         0   \n",
              "2         0         0         0         0         0         0         9   \n",
              "3         0        77       254        21         0         0         0   \n",
              "4       214       253       253       253       195         0         0   \n",
              "\n",
              "   pixel293  pixel294  pixel295  pixel296  pixel297  pixel298  pixel299  \\\n",
              "0         0        93       254       253       238       170        17   \n",
              "1         0         0         0         0       128       252       254   \n",
              "2       254       254       184         0         0         0         0   \n",
              "3         0         0         0         0         0       195        65   \n",
              "4         0         0         0       104       224       253       253   \n",
              "\n",
              "   pixel300  pixel301  pixel302  pixel303  pixel304  pixel305  pixel306  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1       254       212        76         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4       253       253       215        29         0         0         0   \n",
              "\n",
              "   pixel307  pixel308  pixel309  pixel310  pixel311  pixel312  pixel313  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0        47   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0       116   \n",
              "\n",
              "   pixel314  pixel315  pixel316  pixel317  pixel318  pixel319  pixel320  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1       254       254       254        29         0         0         0   \n",
              "2         0         0         0         0         0         0         6   \n",
              "3         0        70       254        21         0         0         0   \n",
              "4       253       253       253       247        75         0         0   \n",
              "\n",
              "   pixel321  pixel322  pixel323  pixel324  pixel325  pixel326  pixel327  \\\n",
              "0        23       210       254       253       159         0         0   \n",
              "1         0         0         0         0         0        83       254   \n",
              "2       185       254       184         0         0         0         0   \n",
              "3         0         0         0         0         0       195       142   \n",
              "4         0         0         0         0        26       200       253   \n",
              "\n",
              "   pixel328  pixel329  pixel330  pixel331  pixel332  pixel333  pixel334  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1       254       254       153         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4       253       253       253       216         4         0         0   \n",
              "\n",
              "   pixel335  pixel336  pixel337  pixel338  pixel339  pixel340  pixel341  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0        80   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0       254   \n",
              "\n",
              "   pixel342  pixel343  pixel344  pixel345  pixel346  pixel347  pixel348  \\\n",
              "0         0         0         0         0         0         0        16   \n",
              "1       254       254       240        24         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0        56       251        21         0         0         0   \n",
              "4       253       253       253       195         0         0         0   \n",
              "\n",
              "   pixel349  pixel350  pixel351  pixel352  pixel353  pixel354  pixel355  \\\n",
              "0       209       253       254       240        81         0         0   \n",
              "1         0         0         0         0         0        25       240   \n",
              "2        89       254       184         0         0         0         0   \n",
              "3         0         0         0         0         0       195       227   \n",
              "4         0         0         0         0         0        26       200   \n",
              "\n",
              "   pixel356  pixel357  pixel358  pixel359  pixel360  pixel361  pixel362  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1       254       254       153         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4       253       253       253       253         5         0         0   \n",
              "\n",
              "   pixel363  pixel364  pixel365  pixel366  pixel367  pixel368  pixel369  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0        64   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0       254   \n",
              "\n",
              "   pixel370  pixel371  pixel372  pixel373  pixel374  pixel375  pixel376  \\\n",
              "0         0         0         0         0         0         0        27   \n",
              "1       254       254       186         7         0         0         0   \n",
              "2         0         0         0         0         0         0         4   \n",
              "3         0         0       222       153         5         0         0   \n",
              "4       253       253       253        99         0         0         0   \n",
              "\n",
              "   pixel377  pixel378  pixel379  pixel380  pixel381  pixel382  pixel383  \\\n",
              "0       253       253       254        13         0         0         0   \n",
              "1         0         0         0         0         0         0       166   \n",
              "2       146       254       184         0         0         0         0   \n",
              "3         0         0         0         0         0       120       240   \n",
              "4         0         0         0         0         0         0        25   \n",
              "\n",
              "   pixel384  pixel385  pixel386  pixel387  pixel388  pixel389  pixel390  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1       254       254       224        12         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3        13         0         0         0         0         0         0   \n",
              "4       231       253       253       253        36         0         0   \n",
              "\n",
              "   pixel391  pixel392  pixel393  pixel394  pixel395  pixel396  pixel397  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0        14       232   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0       254   \n",
              "\n",
              "   pixel398  pixel399  pixel400  pixel401  pixel402  pixel403  pixel404  \\\n",
              "0         0         0         0         0         0        20       206   \n",
              "1       254       254       254        29         0         0         0   \n",
              "2         0         0         0         0         0         0         9   \n",
              "3         0         0        67       251        40         0         0   \n",
              "4       253       253       253        99         0         0         0   \n",
              "\n",
              "   pixel405  pixel406  pixel407  pixel408  pixel409  pixel410  pixel411  \\\n",
              "0       254       254       198         7         0         0         0   \n",
              "1         0         0         0         0         0         0        75   \n",
              "2       254       254       184         0         0         0         0   \n",
              "3         0         0         0         0         0        94       255   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel412  pixel413  pixel414  pixel415  pixel416  pixel417  pixel418  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1       254       254       254        17         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3        69         0         0         0         0         0         0   \n",
              "4       223       253       253       253       129         0         0   \n",
              "\n",
              "   pixel419  pixel420  pixel421  pixel422  pixel423  pixel424  pixel425  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0        18       254   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0       254   \n",
              "\n",
              "   pixel426  pixel427  pixel428  pixel429  pixel430  pixel431  pixel432  \\\n",
              "0         0         0         0         0         0       168       253   \n",
              "1       254       254       254        29         0         0         0   \n",
              "2         0         0         0         0         0         0         9   \n",
              "3         0         0         0       234       184         0         0   \n",
              "4       253       253       253        99         0         0         0   \n",
              "\n",
              "   pixel433  pixel434  pixel435  pixel436  pixel437  pixel438  pixel439  \\\n",
              "0       253       196         7         0         0         0         0   \n",
              "1         0         0         0         0         0         0        48   \n",
              "2       254       254       184         0         0         0         0   \n",
              "3         0         0         0         0         0        19       245   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel440  pixel441  pixel442  pixel443  pixel444  pixel445  pixel446  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1       254       254       254        17         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3        69         0         0         0         0         0         0   \n",
              "4       127       253       253       253       129         0         0   \n",
              "\n",
              "   pixel447  pixel448  pixel449  pixel450  pixel451  pixel452  pixel453  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         2       163   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0       254   \n",
              "\n",
              "   pixel454  pixel455  pixel456  pixel457  pixel458  pixel459  pixel460  \\\n",
              "0         0         0         0         0        20       203       253   \n",
              "1       254       254       254        29         0         0         0   \n",
              "2         0         0         0         0         0         0         9   \n",
              "3         0         0         0       234       169         0         0   \n",
              "4       253       253       253        99         0         0         0   \n",
              "\n",
              "   pixel461  pixel462  pixel463  pixel464  pixel465  pixel466  pixel467  \\\n",
              "0       248        76         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0        48   \n",
              "2       254       254       184         0         0         0         0   \n",
              "3         0         0         0         0         0         3       199   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel468  pixel469  pixel470  pixel471  pixel472  pixel473  pixel474  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1       254       254       254        17         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3       182        10         0         0         0         0         0   \n",
              "4       139       253       253       253        90         0         0   \n",
              "\n",
              "   pixel475  pixel476  pixel477  pixel478  pixel479  pixel480  pixel481  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0        94   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0       254   \n",
              "\n",
              "   pixel482  pixel483  pixel484  pixel485  pixel486  pixel487  pixel488  \\\n",
              "0         0         0         0        22       188       253       245   \n",
              "1       254       254       254       200        12         0         0   \n",
              "2         0         0         0         0         0         0         9   \n",
              "3         0         0         0       154       205         4         0   \n",
              "4       253       253       253        99         0         0         0   \n",
              "\n",
              "   pixel489  pixel490  pixel491  pixel492  pixel493  pixel494  pixel495  \\\n",
              "0        93         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0        16       209   \n",
              "2       254       254       184         0         0         0         0   \n",
              "3         0        26        72       128       203       208       254   \n",
              "4         0         0         0         0         0         0        78   \n",
              "\n",
              "   pixel496  pixel497  pixel498  pixel499  pixel500  pixel501  pixel502  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1       254       254       150         1         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3       254       131         0         0         0         0         0   \n",
              "4       248       253       253       253         5         0         0   \n",
              "\n",
              "   pixel503  pixel504  pixel505  pixel506  pixel507  pixel508  pixel509  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0        15   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0       254   \n",
              "\n",
              "   pixel510  pixel511  pixel512  pixel513  pixel514  pixel515  pixel516  \\\n",
              "0         0         0         0       103       253       253       191   \n",
              "1       206       254       254       254       202        66         0   \n",
              "2         0         0         0         0         0         0         9   \n",
              "3         0         0         0        61       254       129       113   \n",
              "4       253       253       253       216        34         0         0   \n",
              "\n",
              "   pixel517  pixel518  pixel519  pixel520  pixel521  pixel522  pixel523  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0        21       161       254   \n",
              "2       254       254       184         0         0         0         0   \n",
              "3       186       245       251       189        75        56       136   \n",
              "4         0         0         0         0         0        33       152   \n",
              "\n",
              "   pixel524  pixel525  pixel526  pixel527  pixel528  pixel529  pixel530  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1       254       245        31         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3       254        73         0         0         0         0         0   \n",
              "4       253       253       253       107         1         0         0   \n",
              "\n",
              "   pixel531  pixel532  pixel533  pixel534  pixel535  pixel536  pixel537  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0       206   \n",
              "\n",
              "   pixel538  pixel539  pixel540  pixel541  pixel542  pixel543  pixel544  \\\n",
              "0         0         0        89       240       253       195        25   \n",
              "1        60       212       254       254       254       194        48   \n",
              "2         0         0         0         0         0         0       156   \n",
              "3         0         0         0        15       216       233       233   \n",
              "4       253       253       253       253       140         0         0   \n",
              "\n",
              "   pixel545  pixel546  pixel547  pixel548  pixel549  pixel550  pixel551  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1        48        34        41        48       209       254       254   \n",
              "2       254       254       184         0         0         0         0   \n",
              "3       159       104        52         0         0         0        38   \n",
              "4         0         0         0        30       139       234       253   \n",
              "\n",
              "   pixel552  pixel553  pixel554  pixel555  pixel556  pixel557  pixel558  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1       254       171         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3       254        73         0         0         0         0         0   \n",
              "4       253       253       154         2         0         0         0   \n",
              "\n",
              "   pixel559  pixel560  pixel561  pixel562  pixel563  pixel564  pixel565  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0        16   \n",
              "\n",
              "   pixel566  pixel567  pixel568  pixel569  pixel570  pixel571  pixel572  \\\n",
              "0         0        15       220       253       253        80         0   \n",
              "1         0        86       243       254       254       254       254   \n",
              "2         0         0         0         0         0         0       185   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4       205       253       253       253       250       208       106   \n",
              "\n",
              "   pixel573  pixel574  pixel575  pixel576  pixel577  pixel578  pixel579  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1       254       233       243       254       254       254       254   \n",
              "2       255       255       184         0         0         0         0   \n",
              "3         0         0         0         0         0         0        18   \n",
              "4       106       106       200       237       253       253       253   \n",
              "\n",
              "   pixel580  pixel581  pixel582  pixel583  pixel584  pixel585  pixel586  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1       254        86         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3       254        73         0         0         0         0         0   \n",
              "4       253       209        22         0         0         0         0   \n",
              "\n",
              "   pixel587  pixel588  pixel589  pixel590  pixel591  pixel592  pixel593  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel594  pixel595  pixel596  pixel597  pixel598  pixel599  pixel600  \\\n",
              "0         0        94       253       253       253        94         0   \n",
              "1         0         0       114       254       254       254       254   \n",
              "2         0         0         0         0         0         0       185   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4        82       253       253       253       253       253       253   \n",
              "\n",
              "   pixel601  pixel602  pixel603  pixel604  pixel605  pixel606  pixel607  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1       254       254       254       254       254       254       239   \n",
              "2       254       254       184         0         0         0         0   \n",
              "3         0         0         0         0         0         0        18   \n",
              "4       253       253       253       253       253       253       253   \n",
              "\n",
              "   pixel608  pixel609  pixel610  pixel611  pixel612  pixel613  pixel614  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1        86        11         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3       254        73         0         0         0         0         0   \n",
              "4       209        22         0         0         0         0         0   \n",
              "\n",
              "   pixel615  pixel616  pixel617  pixel618  pixel619  pixel620  pixel621  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel622  pixel623  pixel624  pixel625  pixel626  pixel627  pixel628  \\\n",
              "0         0        89       251       253       250       131         0   \n",
              "1         0         0        13       182       254       254       254   \n",
              "2         0         0         0         0         0         0       185   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         1        91       253       253       253       253       253   \n",
              "\n",
              "   pixel629  pixel630  pixel631  pixel632  pixel633  pixel634  pixel635  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1       254       254       254       254       254       243        70   \n",
              "2       254       254       184         0         0         0         0   \n",
              "3         0         0         0         0         0         0         5   \n",
              "4       253       253       253       253       253       213        90   \n",
              "\n",
              "   pixel636  pixel637  pixel638  pixel639  pixel640  pixel641  pixel642  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3       206       106         0         0         0         0         0   \n",
              "4         7         0         0         0         0         0         0   \n",
              "\n",
              "   pixel643  pixel644  pixel645  pixel646  pixel647  pixel648  pixel649  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel650  pixel651  pixel652  pixel653  pixel654  pixel655  pixel656  \\\n",
              "0         0         0       214       218        95         0         0   \n",
              "1         0         0         0         8        76       146       254   \n",
              "2         0         0         0         0         0         0        63   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         1        18       129       208       253       253   \n",
              "\n",
              "   pixel657  pixel658  pixel659  pixel660  pixel661  pixel662  pixel663  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1       255       254       255       146        19        15         0   \n",
              "2       254       254        62         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4       253       253       159       129        90         4         0   \n",
              "\n",
              "   pixel664  pixel665  pixel666  pixel667  pixel668  pixel669  pixel670  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3       186       159         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel671  pixel672  pixel673  pixel674  pixel675  pixel676  pixel677  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel678  pixel679  pixel680  pixel681  pixel682  pixel683  pixel684  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel685  pixel686  pixel687  pixel688  pixel689  pixel690  pixel691  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         6   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel692  pixel693  pixel694  pixel695  pixel696  pixel697  pixel698  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3       209       101         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel699  pixel700  pixel701  pixel702  pixel703  pixel704  pixel705  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel706  pixel707  pixel708  pixel709  pixel710  pixel711  pixel712  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel713  pixel714  pixel715  pixel716  pixel717  pixel718  pixel719  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel720  pixel721  pixel722  pixel723  pixel724  pixel725  pixel726  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel727  pixel728  pixel729  pixel730  pixel731  pixel732  pixel733  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel734  pixel735  pixel736  pixel737  pixel738  pixel739  pixel740  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel741  pixel742  pixel743  pixel744  pixel745  pixel746  pixel747  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel748  pixel749  pixel750  pixel751  pixel752  pixel753  pixel754  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel755  pixel756  pixel757  pixel758  pixel759  pixel760  pixel761  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel762  pixel763  pixel764  pixel765  pixel766  pixel767  pixel768  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel769  pixel770  pixel771  pixel772  pixel773  pixel774  pixel775  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel776  pixel777  pixel778  pixel779  pixel780  pixel781  pixel782  \\\n",
              "0         0         0         0         0         0         0         0   \n",
              "1         0         0         0         0         0         0         0   \n",
              "2         0         0         0         0         0         0         0   \n",
              "3         0         0         0         0         0         0         0   \n",
              "4         0         0         0         0         0         0         0   \n",
              "\n",
              "   pixel783  \n",
              "0         0  \n",
              "1         0  \n",
              "2         0  \n",
              "3         0  \n",
              "4         0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d59b4fef-3922-41ff-a820-85eca64bfe0a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>label</th>\n",
              "      <th>pixel0</th>\n",
              "      <th>pixel1</th>\n",
              "      <th>pixel2</th>\n",
              "      <th>pixel3</th>\n",
              "      <th>pixel4</th>\n",
              "      <th>pixel5</th>\n",
              "      <th>pixel6</th>\n",
              "      <th>pixel7</th>\n",
              "      <th>pixel8</th>\n",
              "      <th>pixel9</th>\n",
              "      <th>pixel10</th>\n",
              "      <th>pixel11</th>\n",
              "      <th>pixel12</th>\n",
              "      <th>pixel13</th>\n",
              "      <th>pixel14</th>\n",
              "      <th>pixel15</th>\n",
              "      <th>pixel16</th>\n",
              "      <th>pixel17</th>\n",
              "      <th>pixel18</th>\n",
              "      <th>pixel19</th>\n",
              "      <th>pixel20</th>\n",
              "      <th>pixel21</th>\n",
              "      <th>pixel22</th>\n",
              "      <th>pixel23</th>\n",
              "      <th>pixel24</th>\n",
              "      <th>pixel25</th>\n",
              "      <th>pixel26</th>\n",
              "      <th>pixel27</th>\n",
              "      <th>pixel28</th>\n",
              "      <th>pixel29</th>\n",
              "      <th>pixel30</th>\n",
              "      <th>pixel31</th>\n",
              "      <th>pixel32</th>\n",
              "      <th>pixel33</th>\n",
              "      <th>pixel34</th>\n",
              "      <th>pixel35</th>\n",
              "      <th>pixel36</th>\n",
              "      <th>pixel37</th>\n",
              "      <th>pixel38</th>\n",
              "      <th>pixel39</th>\n",
              "      <th>pixel40</th>\n",
              "      <th>pixel41</th>\n",
              "      <th>pixel42</th>\n",
              "      <th>pixel43</th>\n",
              "      <th>pixel44</th>\n",
              "      <th>pixel45</th>\n",
              "      <th>pixel46</th>\n",
              "      <th>pixel47</th>\n",
              "      <th>pixel48</th>\n",
              "      <th>pixel49</th>\n",
              "      <th>pixel50</th>\n",
              "      <th>pixel51</th>\n",
              "      <th>pixel52</th>\n",
              "      <th>pixel53</th>\n",
              "      <th>pixel54</th>\n",
              "      <th>pixel55</th>\n",
              "      <th>pixel56</th>\n",
              "      <th>pixel57</th>\n",
              "      <th>pixel58</th>\n",
              "      <th>pixel59</th>\n",
              "      <th>pixel60</th>\n",
              "      <th>pixel61</th>\n",
              "      <th>pixel62</th>\n",
              "      <th>pixel63</th>\n",
              "      <th>pixel64</th>\n",
              "      <th>pixel65</th>\n",
              "      <th>pixel66</th>\n",
              "      <th>pixel67</th>\n",
              "      <th>pixel68</th>\n",
              "      <th>pixel69</th>\n",
              "      <th>pixel70</th>\n",
              "      <th>pixel71</th>\n",
              "      <th>pixel72</th>\n",
              "      <th>pixel73</th>\n",
              "      <th>pixel74</th>\n",
              "      <th>pixel75</th>\n",
              "      <th>pixel76</th>\n",
              "      <th>pixel77</th>\n",
              "      <th>pixel78</th>\n",
              "      <th>pixel79</th>\n",
              "      <th>pixel80</th>\n",
              "      <th>pixel81</th>\n",
              "      <th>pixel82</th>\n",
              "      <th>pixel83</th>\n",
              "      <th>pixel84</th>\n",
              "      <th>pixel85</th>\n",
              "      <th>pixel86</th>\n",
              "      <th>pixel87</th>\n",
              "      <th>pixel88</th>\n",
              "      <th>pixel89</th>\n",
              "      <th>pixel90</th>\n",
              "      <th>pixel91</th>\n",
              "      <th>pixel92</th>\n",
              "      <th>pixel93</th>\n",
              "      <th>pixel94</th>\n",
              "      <th>pixel95</th>\n",
              "      <th>pixel96</th>\n",
              "      <th>pixel97</th>\n",
              "      <th>pixel98</th>\n",
              "      <th>pixel99</th>\n",
              "      <th>pixel100</th>\n",
              "      <th>pixel101</th>\n",
              "      <th>pixel102</th>\n",
              "      <th>pixel103</th>\n",
              "      <th>pixel104</th>\n",
              "      <th>pixel105</th>\n",
              "      <th>pixel106</th>\n",
              "      <th>pixel107</th>\n",
              "      <th>pixel108</th>\n",
              "      <th>pixel109</th>\n",
              "      <th>pixel110</th>\n",
              "      <th>pixel111</th>\n",
              "      <th>pixel112</th>\n",
              "      <th>pixel113</th>\n",
              "      <th>pixel114</th>\n",
              "      <th>pixel115</th>\n",
              "      <th>pixel116</th>\n",
              "      <th>pixel117</th>\n",
              "      <th>pixel118</th>\n",
              "      <th>pixel119</th>\n",
              "      <th>pixel120</th>\n",
              "      <th>pixel121</th>\n",
              "      <th>pixel122</th>\n",
              "      <th>pixel123</th>\n",
              "      <th>pixel124</th>\n",
              "      <th>pixel125</th>\n",
              "      <th>pixel126</th>\n",
              "      <th>pixel127</th>\n",
              "      <th>pixel128</th>\n",
              "      <th>pixel129</th>\n",
              "      <th>pixel130</th>\n",
              "      <th>pixel131</th>\n",
              "      <th>pixel132</th>\n",
              "      <th>pixel133</th>\n",
              "      <th>pixel134</th>\n",
              "      <th>pixel135</th>\n",
              "      <th>pixel136</th>\n",
              "      <th>pixel137</th>\n",
              "      <th>pixel138</th>\n",
              "      <th>pixel139</th>\n",
              "      <th>pixel140</th>\n",
              "      <th>pixel141</th>\n",
              "      <th>pixel142</th>\n",
              "      <th>pixel143</th>\n",
              "      <th>pixel144</th>\n",
              "      <th>pixel145</th>\n",
              "      <th>pixel146</th>\n",
              "      <th>pixel147</th>\n",
              "      <th>pixel148</th>\n",
              "      <th>pixel149</th>\n",
              "      <th>pixel150</th>\n",
              "      <th>pixel151</th>\n",
              "      <th>pixel152</th>\n",
              "      <th>pixel153</th>\n",
              "      <th>pixel154</th>\n",
              "      <th>pixel155</th>\n",
              "      <th>pixel156</th>\n",
              "      <th>pixel157</th>\n",
              "      <th>pixel158</th>\n",
              "      <th>pixel159</th>\n",
              "      <th>pixel160</th>\n",
              "      <th>pixel161</th>\n",
              "      <th>pixel162</th>\n",
              "      <th>pixel163</th>\n",
              "      <th>pixel164</th>\n",
              "      <th>pixel165</th>\n",
              "      <th>pixel166</th>\n",
              "      <th>pixel167</th>\n",
              "      <th>pixel168</th>\n",
              "      <th>pixel169</th>\n",
              "      <th>pixel170</th>\n",
              "      <th>pixel171</th>\n",
              "      <th>pixel172</th>\n",
              "      <th>pixel173</th>\n",
              "      <th>pixel174</th>\n",
              "      <th>pixel175</th>\n",
              "      <th>pixel176</th>\n",
              "      <th>pixel177</th>\n",
              "      <th>pixel178</th>\n",
              "      <th>pixel179</th>\n",
              "      <th>pixel180</th>\n",
              "      <th>pixel181</th>\n",
              "      <th>pixel182</th>\n",
              "      <th>pixel183</th>\n",
              "      <th>pixel184</th>\n",
              "      <th>pixel185</th>\n",
              "      <th>pixel186</th>\n",
              "      <th>pixel187</th>\n",
              "      <th>pixel188</th>\n",
              "      <th>pixel189</th>\n",
              "      <th>pixel190</th>\n",
              "      <th>pixel191</th>\n",
              "      <th>pixel192</th>\n",
              "      <th>pixel193</th>\n",
              "      <th>pixel194</th>\n",
              "      <th>pixel195</th>\n",
              "      <th>pixel196</th>\n",
              "      <th>pixel197</th>\n",
              "      <th>pixel198</th>\n",
              "      <th>pixel199</th>\n",
              "      <th>pixel200</th>\n",
              "      <th>pixel201</th>\n",
              "      <th>pixel202</th>\n",
              "      <th>pixel203</th>\n",
              "      <th>pixel204</th>\n",
              "      <th>pixel205</th>\n",
              "      <th>pixel206</th>\n",
              "      <th>pixel207</th>\n",
              "      <th>pixel208</th>\n",
              "      <th>pixel209</th>\n",
              "      <th>pixel210</th>\n",
              "      <th>pixel211</th>\n",
              "      <th>pixel212</th>\n",
              "      <th>pixel213</th>\n",
              "      <th>pixel214</th>\n",
              "      <th>pixel215</th>\n",
              "      <th>pixel216</th>\n",
              "      <th>pixel217</th>\n",
              "      <th>pixel218</th>\n",
              "      <th>pixel219</th>\n",
              "      <th>pixel220</th>\n",
              "      <th>pixel221</th>\n",
              "      <th>pixel222</th>\n",
              "      <th>pixel223</th>\n",
              "      <th>pixel224</th>\n",
              "      <th>pixel225</th>\n",
              "      <th>pixel226</th>\n",
              "      <th>pixel227</th>\n",
              "      <th>pixel228</th>\n",
              "      <th>pixel229</th>\n",
              "      <th>pixel230</th>\n",
              "      <th>pixel231</th>\n",
              "      <th>pixel232</th>\n",
              "      <th>pixel233</th>\n",
              "      <th>pixel234</th>\n",
              "      <th>pixel235</th>\n",
              "      <th>pixel236</th>\n",
              "      <th>pixel237</th>\n",
              "      <th>pixel238</th>\n",
              "      <th>pixel239</th>\n",
              "      <th>pixel240</th>\n",
              "      <th>pixel241</th>\n",
              "      <th>pixel242</th>\n",
              "      <th>pixel243</th>\n",
              "      <th>pixel244</th>\n",
              "      <th>pixel245</th>\n",
              "      <th>pixel246</th>\n",
              "      <th>pixel247</th>\n",
              "      <th>pixel248</th>\n",
              "      <th>pixel249</th>\n",
              "      <th>pixel250</th>\n",
              "      <th>pixel251</th>\n",
              "      <th>pixel252</th>\n",
              "      <th>pixel253</th>\n",
              "      <th>pixel254</th>\n",
              "      <th>pixel255</th>\n",
              "      <th>pixel256</th>\n",
              "      <th>pixel257</th>\n",
              "      <th>pixel258</th>\n",
              "      <th>pixel259</th>\n",
              "      <th>pixel260</th>\n",
              "      <th>pixel261</th>\n",
              "      <th>pixel262</th>\n",
              "      <th>pixel263</th>\n",
              "      <th>pixel264</th>\n",
              "      <th>pixel265</th>\n",
              "      <th>pixel266</th>\n",
              "      <th>pixel267</th>\n",
              "      <th>pixel268</th>\n",
              "      <th>pixel269</th>\n",
              "      <th>pixel270</th>\n",
              "      <th>pixel271</th>\n",
              "      <th>pixel272</th>\n",
              "      <th>pixel273</th>\n",
              "      <th>pixel274</th>\n",
              "      <th>pixel275</th>\n",
              "      <th>pixel276</th>\n",
              "      <th>pixel277</th>\n",
              "      <th>pixel278</th>\n",
              "      <th>pixel279</th>\n",
              "      <th>pixel280</th>\n",
              "      <th>pixel281</th>\n",
              "      <th>pixel282</th>\n",
              "      <th>pixel283</th>\n",
              "      <th>pixel284</th>\n",
              "      <th>pixel285</th>\n",
              "      <th>pixel286</th>\n",
              "      <th>pixel287</th>\n",
              "      <th>pixel288</th>\n",
              "      <th>pixel289</th>\n",
              "      <th>pixel290</th>\n",
              "      <th>pixel291</th>\n",
              "      <th>pixel292</th>\n",
              "      <th>pixel293</th>\n",
              "      <th>pixel294</th>\n",
              "      <th>pixel295</th>\n",
              "      <th>pixel296</th>\n",
              "      <th>pixel297</th>\n",
              "      <th>pixel298</th>\n",
              "      <th>pixel299</th>\n",
              "      <th>pixel300</th>\n",
              "      <th>pixel301</th>\n",
              "      <th>pixel302</th>\n",
              "      <th>pixel303</th>\n",
              "      <th>pixel304</th>\n",
              "      <th>pixel305</th>\n",
              "      <th>pixel306</th>\n",
              "      <th>pixel307</th>\n",
              "      <th>pixel308</th>\n",
              "      <th>pixel309</th>\n",
              "      <th>pixel310</th>\n",
              "      <th>pixel311</th>\n",
              "      <th>pixel312</th>\n",
              "      <th>pixel313</th>\n",
              "      <th>pixel314</th>\n",
              "      <th>pixel315</th>\n",
              "      <th>pixel316</th>\n",
              "      <th>pixel317</th>\n",
              "      <th>pixel318</th>\n",
              "      <th>pixel319</th>\n",
              "      <th>pixel320</th>\n",
              "      <th>pixel321</th>\n",
              "      <th>pixel322</th>\n",
              "      <th>pixel323</th>\n",
              "      <th>pixel324</th>\n",
              "      <th>pixel325</th>\n",
              "      <th>pixel326</th>\n",
              "      <th>pixel327</th>\n",
              "      <th>pixel328</th>\n",
              "      <th>pixel329</th>\n",
              "      <th>pixel330</th>\n",
              "      <th>pixel331</th>\n",
              "      <th>pixel332</th>\n",
              "      <th>pixel333</th>\n",
              "      <th>pixel334</th>\n",
              "      <th>pixel335</th>\n",
              "      <th>pixel336</th>\n",
              "      <th>pixel337</th>\n",
              "      <th>pixel338</th>\n",
              "      <th>pixel339</th>\n",
              "      <th>pixel340</th>\n",
              "      <th>pixel341</th>\n",
              "      <th>pixel342</th>\n",
              "      <th>pixel343</th>\n",
              "      <th>pixel344</th>\n",
              "      <th>pixel345</th>\n",
              "      <th>pixel346</th>\n",
              "      <th>pixel347</th>\n",
              "      <th>pixel348</th>\n",
              "      <th>pixel349</th>\n",
              "      <th>pixel350</th>\n",
              "      <th>pixel351</th>\n",
              "      <th>pixel352</th>\n",
              "      <th>pixel353</th>\n",
              "      <th>pixel354</th>\n",
              "      <th>pixel355</th>\n",
              "      <th>pixel356</th>\n",
              "      <th>pixel357</th>\n",
              "      <th>pixel358</th>\n",
              "      <th>pixel359</th>\n",
              "      <th>pixel360</th>\n",
              "      <th>pixel361</th>\n",
              "      <th>pixel362</th>\n",
              "      <th>pixel363</th>\n",
              "      <th>pixel364</th>\n",
              "      <th>pixel365</th>\n",
              "      <th>pixel366</th>\n",
              "      <th>pixel367</th>\n",
              "      <th>pixel368</th>\n",
              "      <th>pixel369</th>\n",
              "      <th>pixel370</th>\n",
              "      <th>pixel371</th>\n",
              "      <th>pixel372</th>\n",
              "      <th>pixel373</th>\n",
              "      <th>pixel374</th>\n",
              "      <th>pixel375</th>\n",
              "      <th>pixel376</th>\n",
              "      <th>pixel377</th>\n",
              "      <th>pixel378</th>\n",
              "      <th>pixel379</th>\n",
              "      <th>pixel380</th>\n",
              "      <th>pixel381</th>\n",
              "      <th>pixel382</th>\n",
              "      <th>pixel383</th>\n",
              "      <th>pixel384</th>\n",
              "      <th>pixel385</th>\n",
              "      <th>pixel386</th>\n",
              "      <th>pixel387</th>\n",
              "      <th>pixel388</th>\n",
              "      <th>pixel389</th>\n",
              "      <th>pixel390</th>\n",
              "      <th>pixel391</th>\n",
              "      <th>pixel392</th>\n",
              "      <th>pixel393</th>\n",
              "      <th>pixel394</th>\n",
              "      <th>pixel395</th>\n",
              "      <th>pixel396</th>\n",
              "      <th>pixel397</th>\n",
              "      <th>pixel398</th>\n",
              "      <th>pixel399</th>\n",
              "      <th>pixel400</th>\n",
              "      <th>pixel401</th>\n",
              "      <th>pixel402</th>\n",
              "      <th>pixel403</th>\n",
              "      <th>pixel404</th>\n",
              "      <th>pixel405</th>\n",
              "      <th>pixel406</th>\n",
              "      <th>pixel407</th>\n",
              "      <th>pixel408</th>\n",
              "      <th>pixel409</th>\n",
              "      <th>pixel410</th>\n",
              "      <th>pixel411</th>\n",
              "      <th>pixel412</th>\n",
              "      <th>pixel413</th>\n",
              "      <th>pixel414</th>\n",
              "      <th>pixel415</th>\n",
              "      <th>pixel416</th>\n",
              "      <th>pixel417</th>\n",
              "      <th>pixel418</th>\n",
              "      <th>pixel419</th>\n",
              "      <th>pixel420</th>\n",
              "      <th>pixel421</th>\n",
              "      <th>pixel422</th>\n",
              "      <th>pixel423</th>\n",
              "      <th>pixel424</th>\n",
              "      <th>pixel425</th>\n",
              "      <th>pixel426</th>\n",
              "      <th>pixel427</th>\n",
              "      <th>pixel428</th>\n",
              "      <th>pixel429</th>\n",
              "      <th>pixel430</th>\n",
              "      <th>pixel431</th>\n",
              "      <th>pixel432</th>\n",
              "      <th>pixel433</th>\n",
              "      <th>pixel434</th>\n",
              "      <th>pixel435</th>\n",
              "      <th>pixel436</th>\n",
              "      <th>pixel437</th>\n",
              "      <th>pixel438</th>\n",
              "      <th>pixel439</th>\n",
              "      <th>pixel440</th>\n",
              "      <th>pixel441</th>\n",
              "      <th>pixel442</th>\n",
              "      <th>pixel443</th>\n",
              "      <th>pixel444</th>\n",
              "      <th>pixel445</th>\n",
              "      <th>pixel446</th>\n",
              "      <th>pixel447</th>\n",
              "      <th>pixel448</th>\n",
              "      <th>pixel449</th>\n",
              "      <th>pixel450</th>\n",
              "      <th>pixel451</th>\n",
              "      <th>pixel452</th>\n",
              "      <th>pixel453</th>\n",
              "      <th>pixel454</th>\n",
              "      <th>pixel455</th>\n",
              "      <th>pixel456</th>\n",
              "      <th>pixel457</th>\n",
              "      <th>pixel458</th>\n",
              "      <th>pixel459</th>\n",
              "      <th>pixel460</th>\n",
              "      <th>pixel461</th>\n",
              "      <th>pixel462</th>\n",
              "      <th>pixel463</th>\n",
              "      <th>pixel464</th>\n",
              "      <th>pixel465</th>\n",
              "      <th>pixel466</th>\n",
              "      <th>pixel467</th>\n",
              "      <th>pixel468</th>\n",
              "      <th>pixel469</th>\n",
              "      <th>pixel470</th>\n",
              "      <th>pixel471</th>\n",
              "      <th>pixel472</th>\n",
              "      <th>pixel473</th>\n",
              "      <th>pixel474</th>\n",
              "      <th>pixel475</th>\n",
              "      <th>pixel476</th>\n",
              "      <th>pixel477</th>\n",
              "      <th>pixel478</th>\n",
              "      <th>pixel479</th>\n",
              "      <th>pixel480</th>\n",
              "      <th>pixel481</th>\n",
              "      <th>pixel482</th>\n",
              "      <th>pixel483</th>\n",
              "      <th>pixel484</th>\n",
              "      <th>pixel485</th>\n",
              "      <th>pixel486</th>\n",
              "      <th>pixel487</th>\n",
              "      <th>pixel488</th>\n",
              "      <th>pixel489</th>\n",
              "      <th>pixel490</th>\n",
              "      <th>pixel491</th>\n",
              "      <th>pixel492</th>\n",
              "      <th>pixel493</th>\n",
              "      <th>pixel494</th>\n",
              "      <th>pixel495</th>\n",
              "      <th>pixel496</th>\n",
              "      <th>pixel497</th>\n",
              "      <th>pixel498</th>\n",
              "      <th>pixel499</th>\n",
              "      <th>pixel500</th>\n",
              "      <th>pixel501</th>\n",
              "      <th>pixel502</th>\n",
              "      <th>pixel503</th>\n",
              "      <th>pixel504</th>\n",
              "      <th>pixel505</th>\n",
              "      <th>pixel506</th>\n",
              "      <th>pixel507</th>\n",
              "      <th>pixel508</th>\n",
              "      <th>pixel509</th>\n",
              "      <th>pixel510</th>\n",
              "      <th>pixel511</th>\n",
              "      <th>pixel512</th>\n",
              "      <th>pixel513</th>\n",
              "      <th>pixel514</th>\n",
              "      <th>pixel515</th>\n",
              "      <th>pixel516</th>\n",
              "      <th>pixel517</th>\n",
              "      <th>pixel518</th>\n",
              "      <th>pixel519</th>\n",
              "      <th>pixel520</th>\n",
              "      <th>pixel521</th>\n",
              "      <th>pixel522</th>\n",
              "      <th>pixel523</th>\n",
              "      <th>pixel524</th>\n",
              "      <th>pixel525</th>\n",
              "      <th>pixel526</th>\n",
              "      <th>pixel527</th>\n",
              "      <th>pixel528</th>\n",
              "      <th>pixel529</th>\n",
              "      <th>pixel530</th>\n",
              "      <th>pixel531</th>\n",
              "      <th>pixel532</th>\n",
              "      <th>pixel533</th>\n",
              "      <th>pixel534</th>\n",
              "      <th>pixel535</th>\n",
              "      <th>pixel536</th>\n",
              "      <th>pixel537</th>\n",
              "      <th>pixel538</th>\n",
              "      <th>pixel539</th>\n",
              "      <th>pixel540</th>\n",
              "      <th>pixel541</th>\n",
              "      <th>pixel542</th>\n",
              "      <th>pixel543</th>\n",
              "      <th>pixel544</th>\n",
              "      <th>pixel545</th>\n",
              "      <th>pixel546</th>\n",
              "      <th>pixel547</th>\n",
              "      <th>pixel548</th>\n",
              "      <th>pixel549</th>\n",
              "      <th>pixel550</th>\n",
              "      <th>pixel551</th>\n",
              "      <th>pixel552</th>\n",
              "      <th>pixel553</th>\n",
              "      <th>pixel554</th>\n",
              "      <th>pixel555</th>\n",
              "      <th>pixel556</th>\n",
              "      <th>pixel557</th>\n",
              "      <th>pixel558</th>\n",
              "      <th>pixel559</th>\n",
              "      <th>pixel560</th>\n",
              "      <th>pixel561</th>\n",
              "      <th>pixel562</th>\n",
              "      <th>pixel563</th>\n",
              "      <th>pixel564</th>\n",
              "      <th>pixel565</th>\n",
              "      <th>pixel566</th>\n",
              "      <th>pixel567</th>\n",
              "      <th>pixel568</th>\n",
              "      <th>pixel569</th>\n",
              "      <th>pixel570</th>\n",
              "      <th>pixel571</th>\n",
              "      <th>pixel572</th>\n",
              "      <th>pixel573</th>\n",
              "      <th>pixel574</th>\n",
              "      <th>pixel575</th>\n",
              "      <th>pixel576</th>\n",
              "      <th>pixel577</th>\n",
              "      <th>pixel578</th>\n",
              "      <th>pixel579</th>\n",
              "      <th>pixel580</th>\n",
              "      <th>pixel581</th>\n",
              "      <th>pixel582</th>\n",
              "      <th>pixel583</th>\n",
              "      <th>pixel584</th>\n",
              "      <th>pixel585</th>\n",
              "      <th>pixel586</th>\n",
              "      <th>pixel587</th>\n",
              "      <th>pixel588</th>\n",
              "      <th>pixel589</th>\n",
              "      <th>pixel590</th>\n",
              "      <th>pixel591</th>\n",
              "      <th>pixel592</th>\n",
              "      <th>pixel593</th>\n",
              "      <th>pixel594</th>\n",
              "      <th>pixel595</th>\n",
              "      <th>pixel596</th>\n",
              "      <th>pixel597</th>\n",
              "      <th>pixel598</th>\n",
              "      <th>pixel599</th>\n",
              "      <th>pixel600</th>\n",
              "      <th>pixel601</th>\n",
              "      <th>pixel602</th>\n",
              "      <th>pixel603</th>\n",
              "      <th>pixel604</th>\n",
              "      <th>pixel605</th>\n",
              "      <th>pixel606</th>\n",
              "      <th>pixel607</th>\n",
              "      <th>pixel608</th>\n",
              "      <th>pixel609</th>\n",
              "      <th>pixel610</th>\n",
              "      <th>pixel611</th>\n",
              "      <th>pixel612</th>\n",
              "      <th>pixel613</th>\n",
              "      <th>pixel614</th>\n",
              "      <th>pixel615</th>\n",
              "      <th>pixel616</th>\n",
              "      <th>pixel617</th>\n",
              "      <th>pixel618</th>\n",
              "      <th>pixel619</th>\n",
              "      <th>pixel620</th>\n",
              "      <th>pixel621</th>\n",
              "      <th>pixel622</th>\n",
              "      <th>pixel623</th>\n",
              "      <th>pixel624</th>\n",
              "      <th>pixel625</th>\n",
              "      <th>pixel626</th>\n",
              "      <th>pixel627</th>\n",
              "      <th>pixel628</th>\n",
              "      <th>pixel629</th>\n",
              "      <th>pixel630</th>\n",
              "      <th>pixel631</th>\n",
              "      <th>pixel632</th>\n",
              "      <th>pixel633</th>\n",
              "      <th>pixel634</th>\n",
              "      <th>pixel635</th>\n",
              "      <th>pixel636</th>\n",
              "      <th>pixel637</th>\n",
              "      <th>pixel638</th>\n",
              "      <th>pixel639</th>\n",
              "      <th>pixel640</th>\n",
              "      <th>pixel641</th>\n",
              "      <th>pixel642</th>\n",
              "      <th>pixel643</th>\n",
              "      <th>pixel644</th>\n",
              "      <th>pixel645</th>\n",
              "      <th>pixel646</th>\n",
              "      <th>pixel647</th>\n",
              "      <th>pixel648</th>\n",
              "      <th>pixel649</th>\n",
              "      <th>pixel650</th>\n",
              "      <th>pixel651</th>\n",
              "      <th>pixel652</th>\n",
              "      <th>pixel653</th>\n",
              "      <th>pixel654</th>\n",
              "      <th>pixel655</th>\n",
              "      <th>pixel656</th>\n",
              "      <th>pixel657</th>\n",
              "      <th>pixel658</th>\n",
              "      <th>pixel659</th>\n",
              "      <th>pixel660</th>\n",
              "      <th>pixel661</th>\n",
              "      <th>pixel662</th>\n",
              "      <th>pixel663</th>\n",
              "      <th>pixel664</th>\n",
              "      <th>pixel665</th>\n",
              "      <th>pixel666</th>\n",
              "      <th>pixel667</th>\n",
              "      <th>pixel668</th>\n",
              "      <th>pixel669</th>\n",
              "      <th>pixel670</th>\n",
              "      <th>pixel671</th>\n",
              "      <th>pixel672</th>\n",
              "      <th>pixel673</th>\n",
              "      <th>pixel674</th>\n",
              "      <th>pixel675</th>\n",
              "      <th>pixel676</th>\n",
              "      <th>pixel677</th>\n",
              "      <th>pixel678</th>\n",
              "      <th>pixel679</th>\n",
              "      <th>pixel680</th>\n",
              "      <th>pixel681</th>\n",
              "      <th>pixel682</th>\n",
              "      <th>pixel683</th>\n",
              "      <th>pixel684</th>\n",
              "      <th>pixel685</th>\n",
              "      <th>pixel686</th>\n",
              "      <th>pixel687</th>\n",
              "      <th>pixel688</th>\n",
              "      <th>pixel689</th>\n",
              "      <th>pixel690</th>\n",
              "      <th>pixel691</th>\n",
              "      <th>pixel692</th>\n",
              "      <th>pixel693</th>\n",
              "      <th>pixel694</th>\n",
              "      <th>pixel695</th>\n",
              "      <th>pixel696</th>\n",
              "      <th>pixel697</th>\n",
              "      <th>pixel698</th>\n",
              "      <th>pixel699</th>\n",
              "      <th>pixel700</th>\n",
              "      <th>pixel701</th>\n",
              "      <th>pixel702</th>\n",
              "      <th>pixel703</th>\n",
              "      <th>pixel704</th>\n",
              "      <th>pixel705</th>\n",
              "      <th>pixel706</th>\n",
              "      <th>pixel707</th>\n",
              "      <th>pixel708</th>\n",
              "      <th>pixel709</th>\n",
              "      <th>pixel710</th>\n",
              "      <th>pixel711</th>\n",
              "      <th>pixel712</th>\n",
              "      <th>pixel713</th>\n",
              "      <th>pixel714</th>\n",
              "      <th>pixel715</th>\n",
              "      <th>pixel716</th>\n",
              "      <th>pixel717</th>\n",
              "      <th>pixel718</th>\n",
              "      <th>pixel719</th>\n",
              "      <th>pixel720</th>\n",
              "      <th>pixel721</th>\n",
              "      <th>pixel722</th>\n",
              "      <th>pixel723</th>\n",
              "      <th>pixel724</th>\n",
              "      <th>pixel725</th>\n",
              "      <th>pixel726</th>\n",
              "      <th>pixel727</th>\n",
              "      <th>pixel728</th>\n",
              "      <th>pixel729</th>\n",
              "      <th>pixel730</th>\n",
              "      <th>pixel731</th>\n",
              "      <th>pixel732</th>\n",
              "      <th>pixel733</th>\n",
              "      <th>pixel734</th>\n",
              "      <th>pixel735</th>\n",
              "      <th>pixel736</th>\n",
              "      <th>pixel737</th>\n",
              "      <th>pixel738</th>\n",
              "      <th>pixel739</th>\n",
              "      <th>pixel740</th>\n",
              "      <th>pixel741</th>\n",
              "      <th>pixel742</th>\n",
              "      <th>pixel743</th>\n",
              "      <th>pixel744</th>\n",
              "      <th>pixel745</th>\n",
              "      <th>pixel746</th>\n",
              "      <th>pixel747</th>\n",
              "      <th>pixel748</th>\n",
              "      <th>pixel749</th>\n",
              "      <th>pixel750</th>\n",
              "      <th>pixel751</th>\n",
              "      <th>pixel752</th>\n",
              "      <th>pixel753</th>\n",
              "      <th>pixel754</th>\n",
              "      <th>pixel755</th>\n",
              "      <th>pixel756</th>\n",
              "      <th>pixel757</th>\n",
              "      <th>pixel758</th>\n",
              "      <th>pixel759</th>\n",
              "      <th>pixel760</th>\n",
              "      <th>pixel761</th>\n",
              "      <th>pixel762</th>\n",
              "      <th>pixel763</th>\n",
              "      <th>pixel764</th>\n",
              "      <th>pixel765</th>\n",
              "      <th>pixel766</th>\n",
              "      <th>pixel767</th>\n",
              "      <th>pixel768</th>\n",
              "      <th>pixel769</th>\n",
              "      <th>pixel770</th>\n",
              "      <th>pixel771</th>\n",
              "      <th>pixel772</th>\n",
              "      <th>pixel773</th>\n",
              "      <th>pixel774</th>\n",
              "      <th>pixel775</th>\n",
              "      <th>pixel776</th>\n",
              "      <th>pixel777</th>\n",
              "      <th>pixel778</th>\n",
              "      <th>pixel779</th>\n",
              "      <th>pixel780</th>\n",
              "      <th>pixel781</th>\n",
              "      <th>pixel782</th>\n",
              "      <th>pixel783</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>188</td>\n",
              "      <td>255</td>\n",
              "      <td>94</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>191</td>\n",
              "      <td>250</td>\n",
              "      <td>253</td>\n",
              "      <td>93</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>123</td>\n",
              "      <td>248</td>\n",
              "      <td>253</td>\n",
              "      <td>167</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>80</td>\n",
              "      <td>247</td>\n",
              "      <td>253</td>\n",
              "      <td>208</td>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>29</td>\n",
              "      <td>207</td>\n",
              "      <td>253</td>\n",
              "      <td>235</td>\n",
              "      <td>77</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>54</td>\n",
              "      <td>209</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>88</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>93</td>\n",
              "      <td>254</td>\n",
              "      <td>253</td>\n",
              "      <td>238</td>\n",
              "      <td>170</td>\n",
              "      <td>17</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>23</td>\n",
              "      <td>210</td>\n",
              "      <td>254</td>\n",
              "      <td>253</td>\n",
              "      <td>159</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>209</td>\n",
              "      <td>253</td>\n",
              "      <td>254</td>\n",
              "      <td>240</td>\n",
              "      <td>81</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>27</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>254</td>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>20</td>\n",
              "      <td>206</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>198</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>168</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>196</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>20</td>\n",
              "      <td>203</td>\n",
              "      <td>253</td>\n",
              "      <td>248</td>\n",
              "      <td>76</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>188</td>\n",
              "      <td>253</td>\n",
              "      <td>245</td>\n",
              "      <td>93</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>103</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>191</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>89</td>\n",
              "      <td>240</td>\n",
              "      <td>253</td>\n",
              "      <td>195</td>\n",
              "      <td>25</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>15</td>\n",
              "      <td>220</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>80</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>94</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>94</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>89</td>\n",
              "      <td>251</td>\n",
              "      <td>253</td>\n",
              "      <td>250</td>\n",
              "      <td>131</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>214</td>\n",
              "      <td>218</td>\n",
              "      <td>95</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>18</td>\n",
              "      <td>30</td>\n",
              "      <td>137</td>\n",
              "      <td>137</td>\n",
              "      <td>192</td>\n",
              "      <td>86</td>\n",
              "      <td>72</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>13</td>\n",
              "      <td>86</td>\n",
              "      <td>250</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>217</td>\n",
              "      <td>246</td>\n",
              "      <td>151</td>\n",
              "      <td>32</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>179</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>231</td>\n",
              "      <td>54</td>\n",
              "      <td>15</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>72</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>104</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>61</td>\n",
              "      <td>191</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>109</td>\n",
              "      <td>83</td>\n",
              "      <td>199</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>243</td>\n",
              "      <td>85</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>172</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>202</td>\n",
              "      <td>147</td>\n",
              "      <td>147</td>\n",
              "      <td>45</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>29</td>\n",
              "      <td>200</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>171</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>174</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>89</td>\n",
              "      <td>67</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>128</td>\n",
              "      <td>252</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>212</td>\n",
              "      <td>76</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>47</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>29</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>83</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>153</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>80</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>240</td>\n",
              "      <td>24</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>240</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>153</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>64</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>186</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>166</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>224</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>232</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>29</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>75</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>17</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>18</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>29</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>48</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>17</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>163</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>29</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>48</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>17</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>94</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>200</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>209</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>150</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>15</td>\n",
              "      <td>206</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>202</td>\n",
              "      <td>66</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>21</td>\n",
              "      <td>161</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>245</td>\n",
              "      <td>31</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>212</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>194</td>\n",
              "      <td>48</td>\n",
              "      <td>48</td>\n",
              "      <td>34</td>\n",
              "      <td>41</td>\n",
              "      <td>48</td>\n",
              "      <td>209</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>171</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>86</td>\n",
              "      <td>243</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>233</td>\n",
              "      <td>243</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>86</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>114</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>239</td>\n",
              "      <td>86</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>13</td>\n",
              "      <td>182</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>243</td>\n",
              "      <td>70</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>76</td>\n",
              "      <td>146</td>\n",
              "      <td>254</td>\n",
              "      <td>255</td>\n",
              "      <td>254</td>\n",
              "      <td>255</td>\n",
              "      <td>146</td>\n",
              "      <td>19</td>\n",
              "      <td>15</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>141</td>\n",
              "      <td>139</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>106</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>184</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>184</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>184</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>185</td>\n",
              "      <td>254</td>\n",
              "      <td>184</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>89</td>\n",
              "      <td>254</td>\n",
              "      <td>184</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>146</td>\n",
              "      <td>254</td>\n",
              "      <td>184</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>184</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>184</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>184</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>184</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>184</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>156</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>184</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>185</td>\n",
              "      <td>255</td>\n",
              "      <td>255</td>\n",
              "      <td>184</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>185</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>184</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>185</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>184</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>63</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>62</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>220</td>\n",
              "      <td>179</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>77</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>28</td>\n",
              "      <td>247</td>\n",
              "      <td>17</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>27</td>\n",
              "      <td>202</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>242</td>\n",
              "      <td>155</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>27</td>\n",
              "      <td>254</td>\n",
              "      <td>63</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>160</td>\n",
              "      <td>207</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>27</td>\n",
              "      <td>254</td>\n",
              "      <td>65</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>127</td>\n",
              "      <td>254</td>\n",
              "      <td>21</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>20</td>\n",
              "      <td>239</td>\n",
              "      <td>65</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>77</td>\n",
              "      <td>254</td>\n",
              "      <td>21</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>195</td>\n",
              "      <td>65</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>70</td>\n",
              "      <td>254</td>\n",
              "      <td>21</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>195</td>\n",
              "      <td>142</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>56</td>\n",
              "      <td>251</td>\n",
              "      <td>21</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>195</td>\n",
              "      <td>227</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>222</td>\n",
              "      <td>153</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>120</td>\n",
              "      <td>240</td>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>67</td>\n",
              "      <td>251</td>\n",
              "      <td>40</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>94</td>\n",
              "      <td>255</td>\n",
              "      <td>69</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>234</td>\n",
              "      <td>184</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>19</td>\n",
              "      <td>245</td>\n",
              "      <td>69</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>234</td>\n",
              "      <td>169</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>199</td>\n",
              "      <td>182</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>154</td>\n",
              "      <td>205</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>72</td>\n",
              "      <td>128</td>\n",
              "      <td>203</td>\n",
              "      <td>208</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>131</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>61</td>\n",
              "      <td>254</td>\n",
              "      <td>129</td>\n",
              "      <td>113</td>\n",
              "      <td>186</td>\n",
              "      <td>245</td>\n",
              "      <td>251</td>\n",
              "      <td>189</td>\n",
              "      <td>75</td>\n",
              "      <td>56</td>\n",
              "      <td>136</td>\n",
              "      <td>254</td>\n",
              "      <td>73</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>15</td>\n",
              "      <td>216</td>\n",
              "      <td>233</td>\n",
              "      <td>233</td>\n",
              "      <td>159</td>\n",
              "      <td>104</td>\n",
              "      <td>52</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>38</td>\n",
              "      <td>254</td>\n",
              "      <td>73</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>18</td>\n",
              "      <td>254</td>\n",
              "      <td>73</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>18</td>\n",
              "      <td>254</td>\n",
              "      <td>73</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>206</td>\n",
              "      <td>106</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>186</td>\n",
              "      <td>159</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>209</td>\n",
              "      <td>101</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>25</td>\n",
              "      <td>130</td>\n",
              "      <td>155</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>254</td>\n",
              "      <td>157</td>\n",
              "      <td>30</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>103</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>114</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>208</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>107</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>215</td>\n",
              "      <td>101</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>23</td>\n",
              "      <td>210</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>248</td>\n",
              "      <td>161</td>\n",
              "      <td>222</td>\n",
              "      <td>222</td>\n",
              "      <td>246</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>39</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>136</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>229</td>\n",
              "      <td>77</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>70</td>\n",
              "      <td>218</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>215</td>\n",
              "      <td>91</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>214</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>195</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>104</td>\n",
              "      <td>224</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>215</td>\n",
              "      <td>29</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>116</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>247</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>200</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>216</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>254</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>195</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>200</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>254</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>99</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>231</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>36</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>254</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>99</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>223</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>129</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>254</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>99</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>127</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>129</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>254</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>99</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>139</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>90</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>254</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>99</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>78</td>\n",
              "      <td>248</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>254</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>216</td>\n",
              "      <td>34</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>33</td>\n",
              "      <td>152</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>107</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>206</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>140</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>30</td>\n",
              "      <td>139</td>\n",
              "      <td>234</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>154</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>205</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>250</td>\n",
              "      <td>208</td>\n",
              "      <td>106</td>\n",
              "      <td>106</td>\n",
              "      <td>106</td>\n",
              "      <td>200</td>\n",
              "      <td>237</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>209</td>\n",
              "      <td>22</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>82</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>209</td>\n",
              "      <td>22</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>91</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>213</td>\n",
              "      <td>90</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>18</td>\n",
              "      <td>129</td>\n",
              "      <td>208</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>253</td>\n",
              "      <td>159</td>\n",
              "      <td>129</td>\n",
              "      <td>90</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d59b4fef-3922-41ff-a820-85eca64bfe0a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d59b4fef-3922-41ff-a820-85eca64bfe0a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d59b4fef-3922-41ff-a820-85eca64bfe0a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ea551f4f-a023-4d59-aadb-6d8978b50ea8\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ea551f4f-a023-4d59-aadb-6d8978b50ea8')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ea551f4f-a023-4d59-aadb-6d8978b50ea8 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_train"
            }
          },
          "metadata": {},
          "execution_count": 15
        }
      ],
      "source": [
        "# Reading the dataset\n",
        "\n",
        "df_train = pd.read_csv('train.csv')\n",
        "df_test = pd.read_csv('test.csv')\n",
        "\n",
        "df_train.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 428
        },
        "id": "5uR-Z7z2soUB",
        "outputId": "8fe91a4b-247e-40b2-84d4-4a6bed56b3da"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYUAAAGbCAYAAAAr/4yjAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAADP1JREFUeJzt3HvM1/P/x/Hnp0JmlEOZGdG3jJzmsJxqcthijBqzYcgfbU5bsznOUv4wa3NaZTSHFYY5y2FYo39IiTEhYpoxJJHMHPt8//o+xu8K1/v6XVdXV263zT+fvZ/X9fy0+dx7ddWr1W632wUAVdWvtxcAYNMhCgCEKAAQogBAiAIAIQoAhCgAEKIAQIgCACEKbJZWrlxZrVarbrzxxm77mgsXLqxWq1ULFy7stq8JmxpRYJMxd+7carVatXTp0t5epUd88MEHdemll9aRRx5ZAwcOrFarVStXruztteBPRAE2kkWLFtXMmTNr3bp1tc8++/T2OrBBogAbySmnnFLfffddvfPOO3X22Wf39jqwQaJAn/LLL7/UtddeW4ccckgNGjSottlmmxo7dmy9/PLLfzlzyy231LBhw2rrrbeuo48+upYtW9bhmeXLl9fpp59eO+ywQw0cOLAOPfTQmj9//j/u8+OPP9by5ctr9erV//jsDjvsUNtuu+0/Pge9SRToU77//vu66667aty4cTVjxoyaPn16ff311zV+/Ph66623Ojx/77331syZM+viiy+uq6++upYtW1bHHntsffXVV3nm3XffrcMPP7zef//9uuqqq+qmm26qbbbZpiZMmFBPPPHE3+6zZMmS2meffWr27Nnd/VahVwzo7QWgie23375WrlxZW265ZV6bPHly7b333jVr1qy6++67//T8Rx99VCtWrKhdd921qqpOOOGEOuyww2rGjBl18803V1XVlClTavfdd6/XX3+9ttpqq6qquuiii2rMmDF15ZVX1sSJEzfSu4Pe56RAn9K/f/8EYf369bVmzZr67bff6tBDD60333yzw/MTJkxIEKqqRo8eXYcddlg999xzVVW1Zs2aeumll+qMM86odevW1erVq2v16tX1zTff1Pjx42vFihX1+eef/+U+48aNq3a7XdOnT+/eNwq9RBToc+bNm1cHHHBADRw4sHbccccaMmRIPfvss7V27doOz44cObLDa3vttVf+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\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# 📦 Load your train and test data\n",
        "train_df = pd.read_csv('train.csv')\n",
        "test_df = pd.read_csv('test.csv')  # Only use this if it has labels\n",
        "\n",
        "##### 📊 Classificatie van MNIST\n",
        "\n",
        "# 🎯 Split into features and targets\n",
        "X_train = train_df.drop(\"label\", axis=1)\n",
        "y_train = train_df[\"label\"]\n",
        "\n",
        "X_test = test_df.drop(\"label\", axis=1)\n",
        "y_test = test_df[\"label\"]\n",
        "\n",
        "# 🧪 Convert to numpy arrays\n",
        "y_train = np.asarray(y_train)\n",
        "y_test = np.asarray(y_test)\n",
        "X_train = np.asarray(X_train)\n",
        "X_test = np.asarray(X_test)\n",
        "\n",
        "# ⚡️ Optional: reduce to 2000 samples to speed up model training\n",
        "training_size = 2000\n",
        "X_train = X_train[:training_size, :]\n",
        "y_train = y_train[:training_size]\n",
        "\n",
        "# 🧼 Scaling pixel values from [0,255] to [0,1]\n",
        "X_train = X_train.astype('float32') / 255.0\n",
        "X_test = X_test.astype('float32') / 255.0\n",
        "\n",
        "# ✅ Visual check (optional)\n",
        "plt.imshow(X_train[0].reshape(28, 28), cmap='gray')\n",
        "plt.title(f\"Label: {y_train[0]}\")\n",
        "plt.axis('off')\n",
        "plt.show()\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "SZ9Kz-cHsoUB",
        "outputId": "8c03db1f-e21b-440d-dc5d-a4e79a22a2c2"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_logistic.py:1247: FutureWarning: 'multi_class' was deprecated in version 1.5 and will be removed in 1.7. From then on, it will always use 'multinomial'. Leave it to its default value to avoid this warning.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "⏱ Training time: 3.21 seconds\n",
            "\n",
            "✅ Test Accuracy: 88.67%\n",
            "\n",
            "📊 Classification Report:\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.94      0.95      0.94      1195\n",
            "           1       0.93      0.97      0.95      1352\n",
            "           2       0.86      0.88      0.87      1157\n",
            "           3       0.88      0.84      0.86      1258\n",
            "           4       0.87      0.92      0.89      1140\n",
            "           5       0.82      0.83      0.83      1076\n",
            "           6       0.92      0.93      0.93      1167\n",
            "           7       0.91      0.88      0.90      1268\n",
            "           8       0.88      0.80      0.84      1174\n",
            "           9       0.85      0.84      0.85      1213\n",
            "\n",
            "    accuracy                           0.89     12000\n",
            "   macro avg       0.89      0.89      0.89     12000\n",
            "weighted avg       0.89      0.89      0.89     12000\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x700 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Training and testing a logistic regression model\n",
        "\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n",
        "import time\n",
        "\n",
        "# ⏱ Start timing\n",
        "start_time = time.time()\n",
        "\n",
        "# ⚙️ Initialize and train the model\n",
        "log_reg = LogisticRegression(\n",
        "    multi_class='multinomial',\n",
        "    solver='lbfgs',\n",
        "    C=1.0,           # regularization strength\n",
        "    max_iter=1000,   # ensure convergence\n",
        "    verbose=1        # optional: shows progress\n",
        ")\n",
        "log_reg.fit(X_train, y_train)\n",
        "\n",
        "# ⏲ Stop timing\n",
        "end_time = time.time()\n",
        "print(f\"\\n⏱ Training time: {end_time - start_time:.2f} seconds\")\n",
        "\n",
        "# 🔮 Predict on the test set\n",
        "y_pred = log_reg.predict(X_test)\n",
        "\n",
        "# 🎯 Evaluate performance\n",
        "accuracy = accuracy_score(y_test, y_pred)\n",
        "print(f\"\\n✅ Test Accuracy: {accuracy * 100:.2f}%\")\n",
        "print(\"\\n📊 Classification Report:\")\n",
        "print(classification_report(y_test, y_pred))\n",
        "\n",
        "# 🧩 Confusion matrix (optional)\n",
        "import seaborn as sns\n",
        "plt.figure(figsize=(10,7))\n",
        "sns.heatmap(confusion_matrix(y_test, y_pred), annot=True, fmt='d', cmap='Blues')\n",
        "plt.title(\"Confusion Matrix\")\n",
        "plt.xlabel(\"Predicted\")\n",
        "plt.ylabel(\"Actual\")\n",
        "plt.show()\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Digits 0, 1, 6, and 7 are the easiest for the model to classify → nearly perfect precision and recall\n",
        "\n",
        "Digits 5, 8, and 9 are trickier → they often look similar to each other in handwritten form\n",
        "\n",
        "8 had the lowest recall (0.80) → the model misses 20% of real 8s (classifies them as something else)\n",
        "\n",
        "Still, the F1-scores are consistently between 0.83–0.95, which is very respectable for logistic regression"
      ],
      "metadata": {
        "id": "SBRBgFYrHBQB"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "dZDv0F8hsoUB",
        "outputId": "7860efc6-9b5e-4269-985a-1afd39d85a87"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[LibLinear]\n",
            "⏱ Training time: 1.19 seconds\n",
            "\n",
            "✅ Test Accuracy (Linear SVM): 85.87%\n",
            "\n",
            "📊 Classification Report:\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.92      0.94      0.93      1195\n",
            "           1       0.92      0.96      0.94      1352\n",
            "           2       0.86      0.85      0.86      1157\n",
            "           3       0.83      0.82      0.83      1258\n",
            "           4       0.85      0.89      0.87      1140\n",
            "           5       0.79      0.78      0.79      1076\n",
            "           6       0.91      0.92      0.91      1167\n",
            "           7       0.87      0.88      0.87      1268\n",
            "           8       0.80      0.74      0.77      1174\n",
            "           9       0.81      0.79      0.80      1213\n",
            "\n",
            "    accuracy                           0.86     12000\n",
            "   macro avg       0.86      0.86      0.86     12000\n",
            "weighted avg       0.86      0.86      0.86     12000\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x700 with 2 Axes>"
            ],
            "image/png": "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zbIOY2NjfPr06Scjzqpbt26oW7cuBg4cCEtLS3Tv3h379+//boPjS5xOTk5ZlpUrVw4RERHSH3xffL0tX37o5mZbWrVqBX19fezbtw9+fn6oUaNGln35hVgsxrJly1C6dGloamrCzMwM5ubmCAoKQnR0dI5fs1ixYrka5L1kyRKYmJggMDAQK1euhIWFxQ+fEx4ejtDQUOkjLi4ux6+XWz96H549ewaJRIKZM2fC3Nxc5jF79mwAwMePHwHkfh/b29vnOE5DQ0P4+Pjg1atXePXqFbZs2QInJyesXr0ac+fOlanbq1cv6cxQAHD16lW8evXqm12lvujZsycOHDiAZ8+e4erVq+wqRUSFEhsZRAWQgYEBbGxs8ODBg1w97+uB19+iqqqabbnkB/3Uv/caX8YLfKGtrY1Lly7h3Llz+O233xAUFIRu3bqhadOmWermRV625QtNTU106tQJO3bswOHDh7/7o3DBggUYP348GjRogN27d+P06dM4e/Ysypcvn6upXXNy5T2zu3fvSn+E379/P0fPqVGjBqytraWPn7nfR0796H34sm88PDxw9uzZbB9fGna53ce53Zdf2NnZoX///vjrr79gZGQEPz8/meVt2rSBoaGhdCC3v78/VFVVsx3nlFmPHj0QERGBQYMGwdTUFM2aNfup+IiI8jNOYUtUQLVp0wYbN27EtWvXULt27e/WtbOzg1gsxtOnT1GuXDlpeVhYGD5//iwd8CoPxsbGMjMxffF1tgQAVFRU0KRJEzRp0gRLly7FggULMH36dFy8eBHu7u7ZbgcAPHnyJMuyx48fw8zMDLq6unnfiGz07NkTW7duhYqKynd/RB48eBCNGjXCli1bZMo/f/4MMzMz6f85bfDlRHx8PPr16wdnZ2fUqVMHPj4+6Nixo3QGq2/x8/OTudGgg4OD3GLKrS+vra6unu17n1lO97G8GBsbw9HRMUujXlNTE7/88gt27tyJsLAwHDhwAI0bN4aVldV312dra4u6devizz//xLBhw2TupUFEVFgwk0FUQE2aNAm6uroYOHAgwsLCsix//vw5VqxYASCjuw+ALDNALV26FADQunVrucXl6OiI6OhoBAUFScs+fPggMzsQkNEH/2tfbkr39bS6X1hbW6NKlSrYsWOHTEPmwYMHOHPmjHQ7FaFRo0aYO3cuVq9e/d0fkaqqqlmy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Awb17oG6tapL62zc7g+/A0cQHR2LsmUc4TF6CKpXqajQuBR9nDtVy/5+Nt6zp6BTu5YIC4/AjLk+CH70D2JiYmFqaozqLpUxYlAfmZt6yZ2Sp7DNL59vRU9h+6Pz+c49B7Fl5x5ERn6CuZkp2rdpjuGD+ih+Hyj4q/lHx/n1W3fRe8jYbOucP74XxW1ykOH7KYrbbqdqDbMt9549GZ3+7QL4KuQtfFdtxO3A+0hISIRtiWLo/1s3mSltFULJU9gCwKkz57F01QaEhoXDyNAAzZq4YdyIwcq92WI+nsL2aSvlnXNLn8rl79wCQtBGhre3Ny5fvoxTp05lu3z48OFYv369dJBpjinxPhn5ipIbGfmFvBsZBYUQ98nIF4roca7sRka+ocT7ZOQrhfAWVjlTRLdbgEZGvpCPGxnPWivvnFvqJBsZBQcbGUUKGxlFTBE9ztnIKGIK4VdzzhTR7WYjI99hIyPviuhRTURERET0DRyTkWdF9JIgEREREREpCjMZRERERESZMJGRd8xkEBERERGRXDGTQURERESUCe+TkXfMZBARERERkVwxk0FERERElAkzGXnHTAYREREREckVMxlERERERJnxMnyecRcSEREREZFcMZNBRERERJQJx2TkHTMZREREREQkV8xkEBERERFlwkRG3jGTQUREREREcsVGBhERERERyRW7SxERERERZcKB33nHTAYREREREckVMxlERERERJkxkZFnzGQQEREREZFcMZNBRERERJQJx2TkXeFsZIiYoClKnA+ECB2CIK53KCF0CIJwPR4mdAjCSE0QOgJhqGkKHQEpk0QidATCEKcJHQGR3BXORgYRERER0U9iIiPveMmfiIiIiIjkipkMIiIiIqJMOCYj75jJICIiIiIiuWImg4iIiIgoM2Yy8oyZDCIiIiIikitmMoiIiIiIMmEiI++YySAiIiIiIrliJoOIiIiIKBPOLpV3zGQQEREREZFcMZNBRERERJQJExl5x0wGERERERHJFTMZRERERESZMZWRZ8xkEBERERGRXLGRQUREREREcsXuUkREREREmbC3VN4xk0FERERERHLFTAYRERERUSa8GV/eMZNBRERERERyxUwGEREREVEmzGTkHTMZREREREQkV8xk/ISbtwOxZac/Hjx8gvCISKxZugDujRpIl0skEqxctwUHDh9HTGws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iIiIiBgkMTGRmzdvWj0SExPvumxSUhJ79uyhQYMGlmnOzs40aNCA7du3Oyryv2MWm0lISDAPGDDAnJCQYHQUh9J2a7sfBdpubfejQNut7RbHGzBggBmwegwYMOCuy164cMEMmLdt22Y1/d133zVXr17dAWn/PSez2Ww2tJWThdy8eRNfX19iYmLw8fExOo7DaLu13Y8Cbbe2+1Gg7dZ2i+MlJibeUblwd3fH3d39jmUvXrxIgQIF2LZtG6GhoZbp7733Hps3b+bnn3+2e95/SzfjExERERExyL0aFHeTO3duXFxciIqKspoeFRVFQECAPeI9MI3JEBERERHJBNzc3KhSpQobNmywTDOZTGzYsMGqsvEwUCVDRERERCST6NWrF+3ataNq1apUr16dMWPGEBcXR4cOHYyOZkWNDBtyd3dnwIAB/7rklVVou7XdjwJtt7b7UaDt1nbLw69Vq1ZcuXKFjz/+mMjISB577DFWr15Nvnz5jI5mRQO/RURERETEpjQmQ0REREREbEqNDBERERERsSk1MkRERERExKbUyBAREREREZtSI8OGJkyYQOHChcmePTs1atRg586dRkeyqy1bttCkSRMCAwNxcnJixYoVRkdyiPDwcKpVq4a3tzd58+alWbNmHDt2zOhYdjdp0iQqVKiAj48PPj4+hIaG8v333xsdy+EiIiJwcnKiR48eRkexq08++QQnJyerR6lSpYyO5RAXLlzg1Vdfxd/fHw8PD8qXL8/u3buNjmVXhQsXvuP7dnJyIiwszOhodpWamspHH31EkSJF8PDwoFixYgwePJhH4Zo4t27dokePHgQHB+Ph4UGtWrXYtWuX0bEkC1Ejw0a+/PJLevXqxYABA9i7dy8VK1bkmWee4fLly0ZHs5u4uDgqVqzIhAkTjI7iUJs3byYsLIwdO3awbt06kpOTadiwIXFxcUZHs6uCBQsSERHBnj172L17N/Xr16dp06YcOnTI6GgOs2vXLqZMmUKFChWMjuIQZcuW5dKlS5bH1q1bjY5kd9evX6d27dq4urry/fffc/jwYUaOHEnOnDmNjmZXu3btsvqu161bB8BLL71kcDL7GjZsGJMmTWL8+PEcOXKEYcOGMXz4cMaNG2d0NLt7/fXXWbduHV988QW//vorDRs2pEGDBly4cMHoaJJVmMUmqlevbg4LC7M8T01NNQcG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c3OzyXvmypXLJusRERFxFFUyRET+A3d3dwICAggODubtt9+mQYMGfPPNN5YuTkOGDCEwMJCQkBAAzp07R8uWLfHz8yNXrlw0bdqU06dPW9aXmppKr1698PPzw9/fn/feew+z2Wz1nn/vLpWYmEjfvn0pVKgQ7u7uFC9enBkzZnD69GmefPJJAHLmzImTkxPt27cHwGQyER4eTpEiRfDw8KBixYosWbLE6n2+++47SpYsiYeHB08++aRVThERkf9CjQwRkQzw8PAgKSkJgA0bNnDs2DHWrVvHypUrSU5O5plnnsHb25sff/yRn376CS8vLxo1amR5zciRI5k9ezYzZ85k69atXLt2jeXLl//je7Zt25aFCxfy+eefc+TIEaZMmYKXlxeFChVi6dKlABw7doxLly4xduxYAMLDw5k7dy6TJ0/m0KFD9OzZk1dffZXNmzcDaY2h5s2b06RJE/bv38/rr7/O+++/b6+PTUREsjh1lxIReQBms5kNGzawZs0aunbtypUrV/D09GT69OmWblLz5s3DZDIxffp0nJycAJg1axZ+fn5s2rSJhg0bMmbMGPr160fz5s0BmDx5MmvWrLnn+/72228sXryYdevW0aBBAwCKFi1qmf9n16q8efPi5+cHpFU+hg4dyvr16wkNDbW8ZuvWrUyZMoV69eoxadIkihUrxsiRIwEICQnh119/ZdiwYTb81ERE5FGhRoaIyH+wcuVKvLy8SE5OxmQy8corr/DJJ58QFhZG+fLlrcZh/PLLL5w4cQJvb2+rdSQkJPD7778TExPDpUuXqFGjhmVetmzZqFq16h1dpv60f/9+XFxcqFev3r/OfOLECeLj43n66aetpiclJVGpUiUAjhw5YpUDsDRIRERE/is1MkRE/oMnn3ySSZMm4ebmRmBgINmy/XUY9fT0tFo2NjaWKlWqMH/+/DvWkydPngd6fw8Pj//8mtjYWABWrVpFgQIFrOa5u7s/UA4REZF/okaGiMh/4OnpSfHixf/VspUrV+bLL78kb968+Pj43HWZ/Pnz8/PPP1O3bl0AUlJS2LNnD5UrV77r8uXLl8dkMrF582ZLd6n0/qykpKamWqaVKVMGd3d3zp49e88KSOnSpfnmm2+spu3YseP+GykiInIXGvgtImInbdq0IXfu3DRt2pQff/yRU6dOsWnTJrp168b58+cB6N69OxEREaxYsYKjR4/yzjvv/OM9LgoXLky7du3o2LEjK1assKxz8eLFAAQHB+Pk5MTKlSu5cuUKsbGxeHt706dPH3r27MmcOXP4/fff2bt3L+PGjWPOnDkAvPXWWxw/fpx3332XY8eOsWDBAmbPnm3vj0hERLIoNTJEROwkR44cbNmyhaCgIJo3b07p0qXp1KkTCQkJlspG7969ee2112jXrh2hoaF4e3vz4osv/uN6J02axP/+9z/eeecdSpUqRefOnYmLiwOgQIECDBw4kPfff598+fLRpUsXAAYPHsxHH31EeHg4pUuXplGjRqxatYoiRYoAEBQUxNKlS1mxYgUVK1Zk8uTJDB061I6fjoiIZGVO5nuNLhQREREREXkAqmSIiIiIiIhNqZEhIiIiIiI2pUaGiIiIiIjYlBoZIiIiIiJiU2pkiIiIiIiITamRISIiIiIiNqVGhoiIiIiI2JQaGSIiIiIiYlNqZIiIiIiIiE2pkSEiIiIiIjalRoaIiIiIiNjU/wFn3YG4CDHlagAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "from sklearn.svm import LinearSVC\n",
        "from sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n",
        "import time\n",
        "\n",
        "# ⏱ Start timing\n",
        "start_time = time.time()\n",
        "\n",
        "# ⚙️ Train Linear SVM\n",
        "svm_linear = LinearSVC(C=1.0, max_iter=2000, dual=False, verbose=1)\n",
        "svm_linear.fit(X_train, y_train)\n",
        "\n",
        "# ⏲ Stop timing\n",
        "end_time = time.time()\n",
        "print(f\"\\n⏱ Training time: {end_time - start_time:.2f} seconds\")\n",
        "\n",
        "# 🔮 Predict on test set\n",
        "y_pred_svm = svm_linear.predict(X_test)\n",
        "\n",
        "# 📊 Evaluate\n",
        "accuracy = accuracy_score(y_test, y_pred_svm)\n",
        "print(f\"\\n✅ Test Accuracy (Linear SVM): {accuracy * 100:.2f}%\")\n",
        "print(\"\\n📊 Classification Report:\")\n",
        "print(classification_report(y_test, y_pred_svm))\n",
        "\n",
        "# 🧩 Confusion matrix (optional)\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "plt.figure(figsize=(10,7))\n",
        "sns.heatmap(confusion_matrix(y_test, y_pred_svm), annot=True, fmt='d', cmap='Oranges')\n",
        "plt.title(\"Confusion Matrix - Linear SVM\")\n",
        "plt.xlabel(\"Predicted\")\n",
        "plt.ylabel(\"Actual\")\n",
        "plt.show()\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Classes 0, 1, 6, and 7 are easiest for the model to classify.\n",
        "\n",
        "Classes 5, 8, 9 are more difficult — consistent with the logistic regression model.\n",
        "\n",
        "Recall for 8 is lowest (0.74) → Many real 8s are getting predicted as something else.\n",
        "\n",
        "Overall weighted F1-score = 0.86 → very solid!"
      ],
      "metadata": {
        "id": "x0EHkPHQIdEp"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b1kaS4aQsoUB",
        "outputId": "bcc3cb7f-f445-47d6-e998-8a25e7ebdbfb"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "🕒 Computation time (One-vs-One): 0.62 seconds\n",
            "🕒 Computation time (One-vs-Rest): 0.55 seconds\n"
          ]
        }
      ],
      "source": [
        "from sklearn.svm import SVC\n",
        "import time\n",
        "\n",
        "# Sample a smaller training set for speed (e.g., 1000 samples)\n",
        "X_train_small = X_train[:1000]\n",
        "y_train_small = y_train[:1000]\n",
        "\n",
        "# 🕐 One-vs-One (default in SVC)\n",
        "start = time.time()\n",
        "\n",
        "model_ovo = SVC(decision_function_shape='ovo')\n",
        "model_ovo.fit(X_train_small, y_train_small)\n",
        "\n",
        "stop = time.time()\n",
        "print('🕒 Computation time (One-vs-One):', round(stop - start, 2), 'seconds')\n",
        "\n",
        "\n",
        "# 🕐 One-vs-Rest\n",
        "start = time.time()\n",
        "\n",
        "model_ovr = SVC(decision_function_shape='ovr')\n",
        "model_ovr.fit(X_train_small, y_train_small)\n",
        "\n",
        "stop = time.time()\n",
        "print('🕒 Computation time (One-vs-Rest):', round(stop - start, 2), 'seconds')\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 464
        },
        "id": "e1GXoUmIsoUB",
        "outputId": "bfa178db-95fa-4dd4-8bd1-d068fb202920"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "🧠 Predicted Digit: 3\n",
            "✅ Model Confidence: 89.11%\n"
          ]
        }
      ],
      "source": [
        "from skimage.io import imread\n",
        "from skimage.transform import resize\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "\n",
        "# 1. 🖼️ Load the image as grayscale\n",
        "testimage = imread(\"./testimage.jpg\", as_gray=True)\n",
        "\n",
        "# 2. ✂️ Resize to 28x28 to match MNIST format\n",
        "testimage = resize(testimage, (28, 28), anti_aliasing=True)\n",
        "\n",
        "# 3. 📊 Display the image using matplotlib\n",
        "plt.imshow(testimage, cmap='gray')\n",
        "plt.title(\"Your Handwritten Digit\")\n",
        "plt.axis('off')\n",
        "plt.show()\n",
        "\n",
        "# 4. 🔄 Flatten the image to 1D and normalize\n",
        "testimage_flat = testimage.reshape(1, -1)\n",
        "testimage_flat = testimage_flat.astype('float32') / 1.0  # Ensure float + scale\n",
        "\n",
        "# 5. ✅ Make sure you're using the MNIST-trained model!\n",
        "# Replace `log_reg` with your model's variable name if different\n",
        "model = log_reg  # or svm_linear if using SVM\n",
        "\n",
        "# 6. 🎯 Predict\n",
        "prediction = model.predict(testimage_flat)\n",
        "print(\"🧠 Predicted Digit:\", prediction[0])\n",
        "\n",
        "# 7. 🔎 Show confidence (only works with models like LogisticRegression that support predict_proba)\n",
        "if hasattr(model, \"predict_proba\"):\n",
        "    probs = model.predict_proba(testimage_flat)\n",
        "    confidence = np.max(probs)\n",
        "    print(f\"✅ Model Confidence: {confidence * 100:.2f}%\")\n",
        "elif hasattr(model, \"decision_function\"):\n",
        "    decision = model.decision_function(testimage_flat)\n",
        "    confidence = np.max(decision)\n",
        "    print(f\"✅ Decision score: {confidence:.2f} (not a probability)\")\n",
        "else:\n",
        "    print(\"⚠️ Model doesn't support confidence scoring.\")\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "High confidence (>85%) usually means the digit is written clearly and matches patterns the model has seen during training.\n",
        "\n",
        "🔍 If the prediction is correct, it means our digit is well-formed, stroke-wise.\n",
        "\n",
        "If the prediction is wrong, that means the digit may be ambiguous or messy, and the model is still pretty confident — which could be a false sense of certainty (important in critical systems)."
      ],
      "metadata": {
        "id": "jfF0EAibLH7G"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 23,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rjrLaBvSsoUB",
        "outputId": "c1343a22-ebcd-43c6-9ee3-5cf848a0847d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/utils/validation.py:2732: UserWarning: X has feature names, but LogisticRegression was fitted without feature names\n",
            "  warnings.warn(\n"
          ]
        }
      ],
      "source": [
        "# Predict on test_Kaggle.csv\n",
        "test_kaggle = pd.read_csv(\"test_Kaggle.csv\")\n",
        "test_kaggle = test_kaggle.astype(\"float32\") / 255.0\n",
        "pred_kaggle = log_reg.predict(test_kaggle)\n",
        "\n",
        "# Create submission CSV\n",
        "submission = pd.DataFrame({\"ImageId\": np.arange(1, len(pred_kaggle)+1), \"Label\": pred_kaggle})\n",
        "submission.to_csv(\"submission.csv\", index=False)\n"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.15"
    },
    "varInspector": {
      "cols": {
        "lenName": 16,
        "lenType": 16,
        "lenVar": 40
      },
      "kernels_config": {
        "python": {
          "delete_cmd_postfix": "",
          "delete_cmd_prefix": "del ",
          "library": "var_list.py",
          "varRefreshCmd": "print(var_dic_list())"
        },
        "r": {
          "delete_cmd_postfix": ") ",
          "delete_cmd_prefix": "rm(",
          "library": "var_list.r",
          "varRefreshCmd": "cat(var_dic_list()) "
        }
      },
      "types_to_exclude": [
        "module",
        "function",
        "builtin_function_or_method",
        "instance",
        "_Feature"
      ],
      "window_display": false
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}